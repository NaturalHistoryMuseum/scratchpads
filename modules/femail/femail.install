<?php

/**
 * Implementation of hook_install
 */
function femail_install(){
  // All we need to do here is loop through all of the forums, and set the email
  // variable accordingly.
  $forum_containers = variable_get('forum_containers', array());
  if($forum_containers){
    $container_sql = 'AND tid NOT IN (' . implode(",", $forum_containers) . ')';
  }
  $results = db_query("SELECT * FROM {term_data} WHERE vid = %d $container_sql", variable_get('forum_nav_vocabulary', 0));
  $emails = array();
  global $base_url;
  $parts = parse_url($base_url);
  while($row = db_fetch_array($results)){
    $email = preg_replace("/[^0-9a-z\-]/", "", strtolower(str_replace(" ", "-", $row['name'])));
    if(array_search($email, $emails)){
      $i = 2;
      while(array_search($email . "_" . $i, $emails)){
        $i++;
      }
      $email = $email . "_" . $i;
    }
    $emails[$row['tid']] = $email . '@' . $parts['host'];
  }
  variable_set('femail_emails', $emails);
  // Set the install time for use in hashes
  variable_set('femail_install_time', time());
  // Add the femail table (which simply stores message IDs
  drupal_install_schema('femail');
  // Set a message to tell users to go and set the permission.
  drupal_set_message(t('You must now <a href="!url">enable roles</a> to post to this website by email (post by femail)', array(
    '!url' => url('')
  )));
  // Add a new input format specifically for Forum posts sent by email.
  module_load_include('admin.inc', 'filter');
  $roles = user_roles(TRUE);
  $form_state = array(
    'values' => array(
      'name' => 'Femail mail message',
      'filters' => array(
        'femail/0' => TRUE,
        'femail/1' => TRUE,
        'filter/0' => TRUE,
        'filter/1' => TRUE,
        'filter/2' => TRUE
      ),
      'roles' => $roles
    )
  );
  filter_admin_format_form_submit(NULL, $form_state);
  // Update the allowed tags for this format
  $format = db_result(db_query("SELECT MAX(format) AS format FROM {filter_formats}"));
  variable_set('allowed_html_' . $format, '');
  // Finally set a variable so that we know what the id is of this format
  variable_set('femail_input_format', $format);
  // Set the order, so that the line break thingy is after the html thingy
  // and also set a few variables.
  variable_set('allowed_html_' . $format, '');
  variable_set('filter_html_' . $format, '2');
  variable_set('filter_html_help_' . $format, 1);
  variable_set('filter_html_nofollow_' . $format, 0);
  variable_set('filter_url_length_' . $format, '72');
  // Set the order, so that the line break thingy is after the html thingy
  $form_state = array(
    'values' => array(
      'weights' => array(
        'filter/0' => -10,
        'filter/1' => -9,
        'filter/2' => -8,
        'femail/0' => -7,
        'femail/1' => -6
      ),
      'format' => $format
    )
  );
  filter_admin_order_submit(NULL, $form_state);
}

/**
 * Implementation of hook_schema
 */
function femail_schema(){
  return array(
    'femail_msgs' => array(
      'fields' => array(
        'nid' => array(
          'type' => 'int',
          'not null' => true
        ),
        'cid' => array(
          'type' => 'int',
          'not null' => true
        ),
        'msgid' => array(
          'type' => 'varchar',
          'length' => 255
        )
      ),
      'primary key' => array(
        'nid',
        'msgid',
        'cid'
      )
    ),
    'femail_user_emails' => array(
      'fields' => array(
        'uid' => array(
          'type' => 'int',
          'not null' => true
        ),
        'email' => array(
          'type' => 'varchar',
          'length' => 255
        ),
        'status' => array(
          'type' => 'int',
          'not null' => true
        )
      ),
      'primary key' => array(
        'uid',
        'email'
      )
    ),
    'femail_user_subscriptions' => array(
      'fields' => array(
        'uid' => array(
          'type' => 'int',
          'not null' => true
        ),
        'tid' => array(
          'type' => 'int',
          'not null' => true
        )
      ),
      'primary key' => array(
        'uid',
        'tid'
      )
    )
  );
}

/**
 * Implementation of hook_uninstall
 */
function femail_uninstall(){
  variable_del('femail_emails');
  drupal_uninstall_schema('femail');
}

/**
 * Implementation of hook_requirements
 */
function femail_requirements($phase){
  // Check that the function user_roles exists, else we're probably installing
  // from scratch
  if(!function_exists('user_roles')){return array();}
  // Check that we have the mailparse functions installed
  $t = get_t();
  $requirements = array(
    'femail_mailparse' => array(
      'title' => $t('Femail: Mailparse')
    ),
    'femail_mx' => array(
      'title' => $t('Femail: MX Records')
    ),
    'femail_permissions' => array(
      'title' => $t('Femail: User permissions')
    ),
    'femail_forum_comment_upload' => array(
      'title' => $t('Femail: Comments & comment upload')
    )
  );
  if(!(function_exists('mailparse_msg_create') && function_exists('mailparse_msg_get_part_data') && function_exists('mailparse_msg_parse'))){
    $requirements['femail_mailparse']['severity'] = REQUIREMENT_ERROR;
    if($phase == 'runtime'){
      $requirements['femail_mailparse']['value'] = $t('Not installed');
    }
  }else{
    $requirements['femail_mailparse']['severity'] = REQUIREMENT_OK;
    if($phase == 'runtime'){
      $requirements['femail_mailparse']['value'] = $t('Installed');
    }
  }
  // Check that there are no MX records set for the domain, and if there are,
  // that they're pointing at the right place (this server).
  global $base_url;
  $parts = parse_url($base_url);
  $mx_records = array();
  if(getmxrr($parts['host'], $mx_records)){
    if(count($mx_records) > 1){
      $requirements['femail_mx']['severity'] = REQUIREMENT_WARNING;
      if($phase == 'runtime'){
        $requirements['femail_mx']['value'] = $t('You have more than one MX record for this domain.  It is likely that not all mail will be sent to this server.');
      }
    }else{
      // Check to see if the mx record points at this server
      if(gethostbyname(array_pop($mx_records)) == gethostbyname($parts['host'])){
        $requirements['femail_mx']['severity'] = REQUIREMENT_OK;
        if($phase == 'runtime'){
          $requirements['femail_mx']['value'] = $t('Your MX record points at this server');
        }
      }else{
        $requirements['femail_mx']['severity'] = REQUIREMENT_WARNING;
        if($phase == 'runtime'){
          $requirements['femail_mx']['value'] = $t('Your MX record DOES NOT point at this server');
        }
      }
    }
  }else{
    // Must be zero (or less!)
    $requirements['femail_mx']['severity'] = REQUIREMENT_OK;
    if($phase == 'runtime'){
      $requirements['femail_mx']['value'] = $t('No MX Records found');
    }
  }
  // Check for comment_upload module, and that it is set for the forum content
  // type.
  if(module_exists('comment_upload')){
    if(variable_get('comment_upload_forum', FALSE)){
      $requirements['femail_forum_comment_upload']['severity'] = REQUIREMENT_OK;
      if($phase == 'runtime'){
        $requirements['femail_forum_comment_upload']['value'] = $t('Comment Upload module enabled and correctly setup.');
      }
    }else{
      $requirements['femail_forum_comment_upload']['severity'] = REQUIREMENT_WARNING;
      if($phase == 'runtime'){
        $requirements['femail_forum_comment_upload']['value'] = $t('Comment Upload module enabled but incorrectly setup.  Please enable uploads for comments on the Forum content type');
      }
    }
  }else{
    // Give a polite message that this module "ROCKS" when the comment_upload 
    // module is also enabled.
    $requirements['femail_forum_comment_upload']['severity'] = REQUIREMENT_WARNING;
    if($phase == 'runtime'){
      $requirements['femail_forum_comment_upload']['value'] = $t('We recommend using this module with the <a href="http://drupal.org/project/comment_upload">Comment upload</a> module.');
    }
  }
  // Check the permissions, and give a warning if any roles have the post by
  // femail permission, but don't have sufficient privileges to post files.
  $result = db_query('SELECT perm, rid FROM {permission}');
  $roles = user_roles();
  $requirements['femail_permissions']['severity'] = REQUIREMENT_OK;
  if($phase == 'runtime'){
    $requirements['femail_permissions']['value'] = '<p>The following roles do not have all the recommended permissions ("post comments"; "upload files to comments"; "create forum topics"; "upload files")<ul>';
  }
  while($row = db_fetch_array($result)){
    $perms = explode(", ", $row['perm']);
    if(in_array('post by femail', $perms)){
      // User has permission, we need to check whether they also have
      if(!(in_array('post comments', $perms) && in_array('upload files to comments', $perms) && in_array('create forum topics', $perms) && in_array('upload files', $perms))){
        if($phase == 'runtime'){
          $requirements['femail_permissions']['value'] .= '<li>' . $roles[$row['rid']] . '</li>';
        }
        $requirements['femail_permissions']['severity'] = REQUIREMENT_WARNING;
      }
    }
  }
  if($phase == 'runtime'){
    if($requirements['femail_permissions']['severity'] == REQUIREMENT_OK){
      $requirements['femail_permissions']['value'] = $t('All roles with the permission "post by femail" have the other required permissions "post comments"; "upload files to comments"; "create forum topics"; "upload files"');
    }else{
      $requirements['femail_permissions']['value'] .= '</ul></p>';
    }
  }
  return $requirements;
}

function femail_update_6101(){
  // Empty just to update the theme/menu shit!  Thanks David.
  return array(
    '#finished' => TRUE
  );
}

function femail_update_6102(){
  // Add a new input format specifically for Forum posts sent by email.
  module_load_include('admin.inc', 'filter');
  $roles = user_roles(TRUE);
  $form_state = array(
    'values' => array(
      'name' => 'Femail mail message',
      'filters' => array(
        'femail/0' => TRUE,
        'femail/1' => TRUE,
        'filter/0' => TRUE,
        'filter/1' => TRUE,
        'filter/2' => TRUE
      ),
      'roles' => $roles
    )
  );
  filter_admin_format_form_submit(NULL, $form_state);
  // Update the allowed tags for this format
  $format = db_result(db_query("SELECT MAX(format) AS format FROM {filter_formats}"));
  variable_set('allowed_html_' . $format, '');
  // Finally set a variable so that we know what the id is of this format
  variable_set('femail_input_format', $format);
  // Set the order, so that the line break thingy is after the html thingy
  $form_state = array(
    'values' => array(
      'weights' => array(
        'femail/0' => -8,
        'femail/1' => -7,
        'filter/0' => -10,
        'filter/1' => -6,
        'filter/2' => -9
      ),
      'format' => $format
    )
  );
  filter_admin_order_submit(NULL, $form_state);
  return array(
    '#finished' => TRUE
  );
}

/**
 * Update the order of the filter and set a few variables.
 */
function femail_update_6103(){
  $ret = array();
  $format = variable_set('femail_input_format', FALSE);
  if(!$format){
    // The variable isn't set, which is quite possible (screwy code - doh). 
    // We'll hunt it out instead.
    $format = db_result(db_query("SELECT format FROM {filter_formats} WHERE name = '%s' OR name = '%s'", 'Femail mail message', t('Femail mail message'))); // Not sure if the name gets translated.
    variable_set('femail_input_format', $format);
  }
  if($format){
    variable_set('allowed_html_' . $format, '');
    variable_set('filter_html_' . $format, '2');
    variable_set('filter_html_help_' . $format, 1);
    variable_set('filter_html_nofollow_' . $format, 0);
    variable_set('filter_url_length_' . $format, '72');
    // Set the order, so that the line break thingy is after the html thingy
    $form_state = array(
      'values' => array(
        'weights' => array(
          'filter/0' => -10,
          'filter/1' => -9,
          'filter/2' => -8,
          'femail/0' => -7,
          'femail/1' => -6
        ),
        'format' => $format
      )
    );
    filter_admin_order_submit(NULL, $form_state);
    $ret[] = array(
      'success' => TRUE,
      'query' => t('Variables and filter order set.')
    );
  }else{
    $ret['#abort'] = array(
      'success' => FALSE,
      'query' => 'Femail input format has been lost/deleted.  Femail must be uninstalled and installed.'
    );
  }
  return $ret;
}