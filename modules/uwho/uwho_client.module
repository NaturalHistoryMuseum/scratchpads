<?php

/**
 * hook_menu
 */
function uwho_client_menu(){
  return array(
    'admin/settings/uwho-client' => array(
      'title' => 'UWho - Client settings',
      'description' => 'Add the key for the remote site that you\'re providing a link to',
      'page callback' => 'drupal_get_form',
      'page arguments' => array(
        'uwho_client_settings'
      ),
      'access arguments' => array(
        'administer site configuration'
      ),
      'file' => 'uwho_client.settings.inc'
    )
  );
}

/**
 * hook_block
 */
function uwho_client_block($op = 'list', $delta = 0, $edit = array()){
  switch($op){
    case 'list':
      return array(
        array(
          'info' => t('UWho Login Block'),
          'weight' => 1000,
          'status' => 1,
          'region' => 'left',
          'cache' => BLOCK_NO_CACHE
        )
      );
    case 'configure':
      return array(
        'link_text' => array(
          '#type' => 'textfield',
          '#title' => t('Link text'),
          '#description' => t('Override the default linktext ("Login to remote site").'),
          '#default_value' => variable_get('uwho_client_link_text', '')
        )
      );
    case 'save':
      if($edit['link_text']){
        variable_set('uwho_client_link_text', $edit['link_text']);
      }
      return;
    case 'view':
      switch($delta){
        case 0:
          drupal_add_css(drupal_get_path('module', 'uwho_client') . '/uwho_client.css');
          return array(
            'subject' => t('UWho Login Block'),
            'content' => uwho_client_block_content(variable_get('uwho_client_link_text', FALSE))
          );
      }
  }
}

/**
 * helper function for above which returns the block content
 */
function uwho_client_block_content($text = FALSE){
  if(!$text){
    $text = t('Login to remote site');
  }
  // First, we need to get the key that has been set, if no key is set, we 
  // return the empty string.
  global $user;
  $key = variable_get('uwho_client_key', FALSE);
  $url = variable_get('uwho_client_url', FALSE);
  // If one of the essential settings hasn't been set, or we're not logged in!
  if(!($key && $url && $user->uid)){return '';}
  // Load the class file
  module_load_include('inc', 'uwho_site', 'uwho.cryptastic');
  $cryptastic = new cryptastic();
  $key = $cryptastic->pbkdf2($key, $key . $url, 1000, 32);
  $site_url = url('', array(
    'absolute' => TRUE
  ));
  $url_parts = parse_url($site_url);
  $encrypted = $cryptastic->encrypt(array(
    'site_url' => $site_url,
    'guid' => $url_parts['host'] . ':' . (strlen($url_parts['path']) > 1 ? $url_parts['path'] . ':' : '') . $user->uid,
    'user' => array(
      'url' => url('user/' . $user->uid, array(
        'absolute' => TRUE
      )),
      'name' => $user->name,
      'mail' => $user->mail,
      'drupal_user_object' => $user
    )
  ), $key);
  if(!$encrypted){
    watchdog('uwho', 'Encryption failed');
    return '';
  }
  // We need to ensure that jquery.js is added to the page
  drupal_add_js('', '');
  if(count($_COOKIE) && (isset($_COOKIE['has_js']) && ($_COOKIE['has_js']))){
    $link_or_button = '<a href="' . $url . ((strlen(urlencode($encrypted))+strlen($url))<1800 ? (strpos($url, '?') ? '&' : '?') . 'uwhodata=' . urlencode($encrypted) : '') . '" onclick="$(\'#uwho-client-form\').trigger(\'submit\'); return false;">'.$text.'</a>';
  } else {
    $link_or_button = '<input type="submit" value="'.$text.'"/>';
  }
  // Note, we only include the data in the URL, if the length of the data and 
  // URL is less than 1800 characters.  This helps to ensure we don't go over 
  // apache's URL length limit.
  return '<form action="' . $url . '" accept-charset="UTF-8" method="post" id="uwho-client-form">
  <input type="text" name="uwhodata" value="' . urlencode($encrypted) . '" style="display:none"/>
  '.$link_or_button.'
 </form>';
}