<?php

/**
 * hook_info
 */
function itis_term_node_info(){
  return array(
    'itis_term' => array(
      'name' => 'ITIS Name',
      'module' => 'itis_term',
      'description' => 'Content type designed for extending the terms of a biological taxonomy.',
      'has_title' => TRUE,
      'title_label' => 'Taxon',
      'has_body' => FALSE,
      'locked' => TRUE
    )
  );
}

/**
 * hook_theme
 */
function itis_term_theme(){
  return array(
    'itis_term_node_form' => array(
      'arguments' => array('form' => NULL)
    )
  );
}

/** 
 *Implementation of hook_menu_alter 
 */
function itis_term_menu_alter(&$items){
  $items['node/add/itis-term']['hidden'] = 1;
  return $items;
}

/**
 * hook_access
 * 
 * This will rely on the taxonomy module's access control!
 */
function itis_term_access($op, $node, $account){
  return user_access('administer taxonomy');
}

/**
 * hook_form
 */
function itis_term_form(&$node, $form_state){
  $type = node_get_types('type', $node);
  $form['title'] = array(
    '#type'=> 'textfield',
    '#title' => check_plain($type->title_label),
    '#required' => TRUE,
    '#default_value' => $node->title,
  );
  return $form;
}

/**
 * form_alter
 */
function itis_term_form_alter(&$form, &$form_state, $form_id){
  if($form_id == 'taxonomy_form_term' && _term_node_get_content_type_for_vid($form['#vocabulary']['vid']) == 'itis_term'){
    $form['identification']['name']['#prefix'] = '<div id="itis_term_name">';
    $form['identification']['name']['#suffix'] = '</div>';
    array_unshift($form['#submit'], 'itis_term_form_term_submit');
    array_unshift($form['#validate'], 'itis_term_validate');
    if($form['identification']['description']['#default_value'] == ''){
      $form['identification']['description']['#type'] = 'hidden';
    }
  } elseif($form_id == 'itis_term_node_form'){
    $form['group_scientificname']['field_unit_name1']['#prefix'] = '<div id="itis_term_unit_name1" class="itis_term_unit">';
    $form['group_scientificname']['field_unit_name1']['#suffix'] = '</div>';
    $form['group_scientificname']['field_unit_name2']['#prefix'] = '<div id="itis_term_unit_name2" class="itis_term_unit">';
    $form['group_scientificname']['field_unit_name2']['#suffix'] = '</div>';
    $form['group_scientificname']['field_unit_name3']['#prefix'] = '<div id="itis_term_unit_name3" class="itis_term_unit">';
    $form['group_scientificname']['field_unit_name3']['#suffix'] = '</div>';
    $form['group_scientificname']['field_unit_name4']['#prefix'] = '<div id="itis_term_unit_name4" class="itis_term_unit">';
    $form['group_scientificname']['field_unit_name4']['#suffix'] = '</div>';
    $form['group_scientificname']['field_unit_ind1']['#prefix'] = '<div id="itis_term_unit_ind1" class="itis_term_unit">';
    $form['group_scientificname']['field_unit_ind1']['#suffix'] = '</div>';
    $form['group_scientificname']['field_unit_ind2']['#prefix'] = '<div id="itis_term_unit_ind2" class="itis_term_unit">';
    $form['group_scientificname']['field_unit_ind2']['#suffix'] = '</div>';
    $form['group_scientificname']['field_unit_ind3']['#prefix'] = '<div id="itis_term_unit_ind3" class="itis_term_unit">';
    $form['group_scientificname']['field_unit_ind3']['#suffix'] = '</div>';
    $form['group_scientificname']['field_unit_ind4']['#prefix'] = '<div id="itis_term_unit_ind4" class="itis_term_unit">';
    $form['group_scientificname']['field_unit_ind4']['#suffix'] = '</div>';
    $form['group_reference']['field_taxon_author']['#prefix'] = '<div id="itis_taxon_author">';
    $form['group_reference']['field_taxon_author']['#suffix'] = '</div>';
    $form['group_usage']['field_usage']['#prefix'] = '<div id="itis_term_usage">';
    $form['group_usage']['field_usage']['#suffix'] = '</div>';
    $form['group_usage']['field_accepted_name']['#prefix'] = '<div id="itis_term_accepted_name">';
    $form['group_usage']['field_accepted_name']['#suffix'] = '</div>';
    $form['group_usage']['field_unacceptability_reason']['#prefix'] = '<div id="itis_term_unacceptability_reason">';
    $form['group_usage']['field_unacceptability_reason']['#suffix'] = '</div>';
    // Add a pre_render, so that we can remove options from rank/etc depending
    // on the vocabulary kingdom.
  }
}

/**
 *
 */
function itis_term_form_taxonomy_form_vocabulary_alter(&$form, &$form_state){
  $classification_type = 0;
  if(isset($form['vid']['#value']) && $form['vid']['#value']){
    $classification_types = variable_get('itis_term_classification_types', array());
    if(isset($classification_types[$form['vid']['#value']])){
      $classification_type = $classification_types[$form['vid']['#value']];
    } 
  }  
  $form['settings']['vocabulary_type'] = array(
    '#type' => 'select',
    '#options' => array('- N/A -', 'Animal', 'Plant', 'Protozoa'),
    '#title' => t('Classification type'),
    '#description' => t('If this vocabulary is to be used to store a biological classification, then please select which kingdom best represents your classification (and therefore the nomenclatural code to use)'),
    '#default_value' => $classification_type
  );
}

function itis_term_validate($form, &$form_state){
  if(isset($form_state['values']['field_usage'][0]['value'])){
    if(!$form_state['values']['field_usage'][0]['value']){
      form_set_error('field_usage', t('Please select a "Name usage".'));
    }
  }
}

function itis_term_form_term_submit($form, &$form_state){
  if(isset($form_state['values']['field_unit_name1'][0]['value']) && $form_state['values']['field_unit_name1'][0]['value'] != ''){
    $form_state['values']['name'] = trim($form_state['values']['field_unit_name1'][0]['value'] ." ". $form_state['values']['field_unit_name2'][0]['value']." ".
                                    $form_state['values']['field_unit_name3'][0]['value'] ." ". $form_state['values']['field_unit_name4'][0]['value']);
  }
}

/**
 * Theme the form just to add js file.
 */
function theme_itis_term_node_form($form){
  drupal_add_js(drupal_get_path('module', 'itis_term').'/itis_term.js');
  drupal_add_css(drupal_get_path('module', 'itis_term').'/itis_term.css');
  return theme('node_form', $form);
}