<?php
// $Id$

/**
 * @file
 * XML Sitemap: User install file
 */

/**
 * Implementation of hook_requirements().
 */
function xmlsitemap_user_requirements($phase) {
  $t = get_t();
  $requirements = array();
  if (in_array($GLOBALS['db_type'], array('mysql', 'mysqli')) && version_compare(db_version(), '4.0.14') < 0) {
    $requirements['xmlsitemap_user_sql'] = array(
      'title' => $t('XML Sitemap: User'),
      'value' => $t('Your MySQL version is too low. &ldquo;XML Sitemap: User&rdquo; requires MySQL 4.0.14 or higher.'),
      'severity' => REQUIREMENT_ERROR,
    );
  }
  return $requirements;
}

/**
 * Implementation of hook_install().
 */
function xmlsitemap_user_install() {
  switch ($GLOBALS['db_type']) {
    case 'mysql':
    case 'mysqli':
      db_query("CREATE TABLE {xmlsitemap_user} (
        uid int,
        last_changed int(11),
        previously_changed int(11),
        priority_override float,
        PRIMARY KEY (uid)
      ) /*!40100 DEFAULT CHARACTER SET utf8 */;");
      db_query("CREATE TABLE {xmlsitemap_user_role} (
        rid int,
        priority float,
        PRIMARY KEY (rid)
      ) /*!40100 DEFAULT CHARACTER SET utf8 */;");
      break;
    case 'pgsql':
      db_query("CREATE TABLE {xmlsitemap_user} (
        uid integer,
        last_changed integer,
        previously_changed integer,
        priority_override real,
        PRIMARY KEY (uid)
      );");
      db_query("CREATE TABLE {xmlsitemap_user_role} (
        rid integer,
        priority real,
        PRIMARY KEY (rid)
      ) /*!40100 DEFAULT CHARACTER SET utf8 */;");
      break;
  }
}

/**
 * Implementation of hook_enable().
 */
function xmlsitemap_user_enable() {
  $weight = db_result(db_query("SELECT weight FROM {system} WHERE type = 'module' AND name = 'pathauto'"));
  if ($weight !== FALSE) {
    db_query("UPDATE {system} SET weight = %d WHERE type = 'module' AND name = 'xmlsitemap_user'", ++$weight);
  }
  db_query("
    INSERT INTO {xmlsitemap_user} (uid, last_changed)
    SELECT u.uid, u.created FROM {users} u
    LEFT JOIN {xmlsitemap_user} xu ON xu.uid = u.uid
    WHERE u.uid <> 0 AND xu.uid IS NULL
  ");
  db_query("
    INSERT INTO {xmlsitemap_user_role} (rid)
    SELECT r.rid FROM {role} r
    LEFT JOIN {xmlsitemap_user_role} xur ON xur.rid = r.rid
    WHERE r.rid > 2 AND xur.rid IS NULL
  ");
  xmlsitemap_update_sitemap();
}

/**
 * Implementation of hook_disable().
 */
function xmlsitemap_user_disable() {
  xmlsitemap_update_sitemap();
}

/**
 * Implementation of hook_uninstall().
 */
function xmlsitemap_user_uninstall() {
  db_query("DROP TABLE {xmlsitemap_user}");
  db_query("DROP TABLE {xmlsitemap_user_role}");
  $settings = db_query("SELECT name FROM {variable} WHERE name LIKE 'xmlsitemap\_user\_%'");
  while ($variable = db_fetch_object($settings)) {
    variable_del($variable->name);
  }
}

/**
 * Implementation of hook_update_N().
 */
function xmlsitemap_user_update_2() {
  $ret = array();
  $ret[] = update_sql("ALTER TABLE {xmlsitemap_user} DROP pid");
  switch ($GLOBALS['db_type']) {
    case 'mysql':
    case 'mysqli':
      $ret[] = update_sql("ALTER TABLE {xmlsitemap_user_role} CHANGE priority priority float");
      break;
    case 'pgsql':
      db_change_column($ret, 'xmlsitemap_user_role', 'priority', 'priority', 'real');
      break;
  }
  return $ret;
}

