<?php
global $base_url;
//Testing URL
//define('WCM_IMPORT_QUERY_URL', 'http://test.e-monocot.org/wcsTaxonExtractor/endpoint?scratchpad=' . urlencode($base_url) . '&function=search&search=');
//define('WCM_IMPORT_REQUEST_URL', 'http://test.e-monocot.org/wcsTaxonExtractor/endpoint?function=details_tcs&id=%s&scratchpad=' . str_replace('%', '%%', urlencode($base_url)));
//Actual WCM URL
define('WCM_IMPORT_QUERY_URL', 'http://apps.kew.org/wcsTaxonExtractor/endpoint?scratchpad=' . urlencode($base_url) . '&function=search&search=');
define('WCM_IMPORT_REQUEST_URL', 'http://apps.kew.org/wcsTaxonExtractor/endpoint?function=details_tcs&id=%s&scratchpad=' . str_replace('%', '%%', urlencode($base_url)));

/**
 * Implementation of hook_classification_import_form
 */
function wcm_import_classification_import_form(){
  drupal_add_css(drupal_get_path('module', 'wcm_import') . '/wcm_import.css');
  $wcm_service_status = strlen(file_get_contents('http://apps.kew.org/wcsTaxonExtractor/endpoint?scratchpad=' . $base_url, 0, stream_context_create(array(
    'http' => array(
      'timeout' => 3
    )
  ))));
  return array(
    'wcm' => array(
      '#type' => 'fieldset',
      '#title' => 'World checklist of Monocots',
      '#description' => 'Import a classification directly from WCM' . theme('advanced_help_topic', 'wcm_import', 'overview'),
      '#collapsed' => TRUE,
      '#collapsible' => TRUE,
      'wcm-name' => array(
        '#type' => 'textfield',
        '#title' => t('Enter the root term of your classification, e.g. Phthiraptera, Insecta, Aves'),
        '#autocomplete_path' => 'wcm_import'
      ),
      'wcm-status' => array(
        '#weight' => -10,
        '#type' => 'markup',
        '#value' => $wcm_service_status ? '<div class="message status"><p>The WCM classification service appears to be running.</p></div>' : '<div class="message error"><p>The WCM classification service (<a href="http://services.eol.org/lifedesk/service.php">http://services.eol.org/lifedesk/service.php</a>) does not appear to be running.  Please try again later.</p></div>'
      ),
      'wcm-search' => array(
        '#type' => 'button',
        '#value' => 'Search',
        '#title' => 'Search',
        '#disabled' => $wcm_service_status ? FALSE : TRUE,
        '#ahah' => array(
          'path' => 'wcm_import',
          'event' => 'click',
          'wrapper' => 'wcm-import-full'
        )
      ),
      'import-full' => array(
        '#prefix' => '<div id="wcm-import-full">',
        '#suffix' => '</div>',
        '#value' => '&nbsp;'
      ),
      'submit' => array(
        '#disabled' => $wcm_service_status ? FALSE : TRUE,
        '#type' => 'submit',
        '#title' => t('Import from WCM'),
        '#value' => t('Import from WCM'),
        '#submit' => array(
          'wcm_import_submit'
        ),
        '#validate' => array(
          'wcm_import_validate'
        )
      )
    )
  );
}

/**
 * Implementation of hook_menu
 */
function wcm_import_menu(){
  return array(
    'wcm_import' => array(
      'title' => 'WCM Import autocomplete path',
      'page callback' => 'wcm_import_autocomplete',
      'access arguments' => array(
        'administer taxonomy'
      ),
      'type' => MENU_CALLBACK
    )
  );
}

/**
 * Callback for autocomplete and ahah.
 */
function wcm_import_autocomplete(){
  if(isset($_POST['wcm-name'])){
    $url = WCM_IMPORT_QUERY_URL . urlencode($_POST['wcm-name']);
    $wcm_xml = file_get_contents('http://fencedine.myspecies.info/?url=' . urlencode($url));
    //$wcm_xml = file_get_contents($url);
    if($wcm_xml){
      $wcm_xml = new SimpleXMLElement($wcm_xml);
      $num_results = count($wcm_xml->value);
      $options = array();
      for($i = 0; $i < $num_results; $i++){
        $options[check_plain($wcm_xml->value[$i]->id) . '|' . check_plain($wcm_xml->value[$i]->number_of_children + $wcm_xml->value[$i]->number_of_children_synonyms)] = check_plain($wcm_xml->value[$i]->ancestry . '|' . $wcm_xml->value[$i]->name) . " <br/>(" . l($wcm_xml->value[$i]->metadata->title, $wcm_xml->value[$i]->metadata->url, array(
          'abosulte' => 1
        )) . ') [approx. ' . check_plain($wcm_xml->value[$i]->number_of_children + $wcm_xml->value[$i]->number_of_children_synonyms) . ' taxa]';
      }
    }
    $form['wcm-import-id'] = array(
      '#type' => 'radios',
      '#name' => 'wcm-import-id',
      '#title' => t('Import from Classification'),
      '#default_value' => '',
      '#parents' => array(
        'wcm-import-id'
      ),
      '#options' => $options
    );
    // FIXME - Looks like the following is hacky (probably not correct).
    $form['wcm-import-id'] = expand_radios($form['wcm-import-id']);
    $keys = element_children($form['wcm-import-id']);
    foreach($keys as $key){
      $form['wcm-import-id'][$key]['#name'] = 'wcm-import-id';
    }
    // Now we're right.
    drupal_json(array(
      'status' => TRUE,
      'data' => drupal_render($form)
    ));
    return;
  }elseif(arg(1)){
    $url = WCM_IMPORT_QUERY_URL . urlencode(arg(1));
    //$wcm_xml = file_get_contents('http://fencedine.myspecies.info/?url=' . urlencode($url));
    $wcm_xml = file_get_contents($url);
    if($wcm_xml){
      $wcm_xml = new SimpleXMLElement($wcm_xml);
      $num_results = count($wcm_xml->value);
      $matches = array();
      for($i = 0; $i < $num_results; $i++){
        $name = $wcm_xml->value[$i]->canonical_form;
        $matches[check_plain($name)] = check_plain($name);
      }
      echo json_encode($matches);
      return;
    }
  }
  echo json_encode(array());
}

/**
 * Implementation of hook_classification_import_alter_data
 */
function wcm_import_classification_import_alter_data(&$tweak){
  // We unfortunately have to hard code here information about the ITIS module.
  // If this vocabulary is using the ITIS term content type, then we change the
  // name, and set other fields.
  // Check for one of the core itis_term functions.  If it exists, then we'll 
  // start our tweaking.  Note, this may get moved from this module in the
  // future.
  if(function_exists('itis_term_form_alter') && function_exists('term_node_taxonomy')){
    // Both itis_term and term_node modules are installed, lets check to see if
    // this vocabulary is set to use itis_term
    $type = _term_node_get_content_type_for_vid($tweak['vocabulary']->vid);
    if($type == 'itis_term' && isset($tweak['form_state']['values']['canonicalname'])){
      // Get the name parts from the canonical name
      $name_parts = explode(" ", $tweak['form_state']['values']['canonicalname']);
      $i = 1;
      foreach($name_parts as $name_part){
        $tweak['form_state']['values']['unit_name' . $i] = $name_part;
        $i++;
      }
      // Set the Authority from the diff in canonical and name, and then set the
      // name to the canonical
      if(strlen($tweak['form_state']['values']['name']) > strlen($tweak['form_state']['values']['canonicalname'])){
        $tweak['form_state']['values']['taxon_author'] = trim(substr($tweak['form_state']['values']['name'], strlen($tweak['form_state']['values']['canonicalname'])));
        $tweak['form_state']['values']['name'] = $tweak['form_state']['values']['canonicalname'];
      }
      // Set the rank (ITIS uses rank_name)
      $tweak['form_state']['values']['rank_name'] = $tweak['form_state']['values']['rank'];
      // FIXME - The following will break synonyms, we need to alter this. 
      // Assume that usage is 'valid'
      if(!isset($tweak['form_state']['values']['usage'])){
        $tweak['form_state']['values']['usage'] = 'valid';
      }
    }
  }
}

/**
 * Implementation of hook_classification_import_help
 */
function wcm_import_classification_import_help(){
  return t('WCM import help text.');
}

/**
 * Validate the form
 */
function wcm_import_validate($form, &$form_state){
  // Lets just check that the wcm-import-id is set in #post, and that it is
// numeric (is this likely to change Patrick?).
/*  if(!(isset($form_state['clicked_button']['#post']['wcm-import-id']) && count(explode("|", $form_state['clicked_button']['#post']['wcm-import-id'])) == 2)){
    form_set_error('wcm-name', t('Please ensure you select a classification to import.  Press "Search" again, and select one from the list that should appear below.'));
  }*/
}

/**
 * Callback function when pressing "Import from WCM"
 */
function wcm_import_submit($form, $form_state){
  $parts = explode("|", $form_state['clicked_button']['#post']['wcm-import-id']);
  $batch = array(
    'operations' => array(
      array(
        'tcs_import_batch_download_data',
        array(
          array(
            sprintf(WCM_IMPORT_REQUEST_URL, urlencode($parts[0]))
          ),
          arg(4),
          $parts[1]
        )
      ),
      array(
        'classification_import_load_terms',
        array(
          arg(4)
        )
      )
    ),
    'finished' => 'classification_import_batch_import_finished',
    'title' => t('Importing'),
    // We use a single multi-pass operation, so the default
    // 'Remaining x of y operations' message will be confusing here.
    'error_message' => t('The import has encountered an error.')
  );
  batch_set($batch);
}