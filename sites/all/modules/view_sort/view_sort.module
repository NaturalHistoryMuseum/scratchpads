<?php

/**
 * Implementation of hook_menu
 */
function view_sort_menu(){
  $items = array();
  $items['views-sort/popup'] = array (
    'title' => 'Sort', 
    'page callback' => 'views_sort_popup_html', 
    'type' => MENU_CALLBACK,
    'file' => 'view_sort.functions.inc',
    'access arguments' => array (
      'assign node weight' ) );
  $items['views-sort/sorted'] = array (
    'title' => '', 
    'page callback' => 'views_sort_sorted', 
    'type' => MENU_CALLBACK, 
    'file' => 'view_sort.functions.inc',
    'access arguments' => array (
      'assign node weight' ) );
  $items['views-sort/number'] = array (
    'title' => '', 
    'page callback' => 'views_sort_number', 
    'type' => MENU_CALLBACK,
    'file' => 'view_sort.functions.inc',
    'access arguments' => array (
      'assign node weight' ) );
  $items['views-sort/pin'] = array (
    'title' => '', 
    'page callback' => 'views_sort_pin', 
    'type' => MENU_CALLBACK,
    'file' => 'view_sort.functions.inc',
    'access arguments' => array (
      'assign node weight' ) );
  return $items;
}

/**
 * Implementation of hook_perm
 */
function view_sort_perm(){
  return array('view sort sort');
}

/**
 * Implementation of hook_init
 */
function view_sort_init(){
  // Gah, I hate doing this, FIXME!
  drupal_add_js(array('view_sort' => array(
        'callbacks' => array(
          'ispecies' => url('ispecies'),
          'number' => url('views-sort/number'),
          'sorted' => url('views-sort/sorted'),
          'pin' => url('views-sort/pin')
        )
      )
    ), 'setting');
}

/**
 * Implementation of hook_views_pre_render
 */
function view_sort_views_pre_render(&$view){
  // Check to see if the view is being filtered by node type, and if it is being
  // sorted by weight.  If so, we add the links.
  if(((
      isset($view->display['default']->display_options['filters']['type']) && 
      $view->display['default']->display_options['filters']['type']['table'] == 'node'
    ) || (
      isset($view->display['page_1']->display_options['filters']['type']) && 
      $view->display['page_1']->display_options['filters']['type']['table'] == 'node'
    )) && (
        isset($view->display['page_1']->display_options['sorts']['weight']) || 
        isset($view->display['default']->display_options['sorts']['weight'])
    ) && (
      user_access('view sort sort')    
    ))
  {      
    $view->attachment_before = '<ul class="view_sort-links"><li>'.l(t("Sort"), "views-sort/popup/".$view->name."/".urlencode(json_encode($view->args)), array('attributes' => array('class'=>'thickbox'), 'query'=>array('height'=>'600','width'=>'600')))."</li>";    
    if(isset($view->display['default']->display_options['filters']['type']['value']) && count($view->display['default']->display_options['filters']['type']['value'])==1){
      $keys = array_keys($view->display['default']->display_options['filters']['type']['value']);
      if($keys[0] != 'ispecies'){
        $view->attachment_before .= '<li>'.l(t('Add'), 'node/add/'.str_replace("_","-",$view->display['default']->display_options['filters']['type']['value'][$keys[0]]), array('query'=>array('tid'=>arg(2)), 'attributes'=>array('target'=>'_blank')))."</li>";
      }
    }
    $view->attachment_before .= '</ul>';
    drupal_add_js(drupal_get_path('module', 'view_sort')."/view_sort.js");
    drupal_add_css(drupal_get_path('module', 'view_sort')."/view_sort.css");
    jquery_ui_add(array('ui.dialog'));
    jquery_ui_add(array('ui.draggable'));
    drupal_add_css(drupal_get_path('module', 'jquery_ui') . '/jquery.ui/themes/smoothness/ui.all.css');
    jquery_ui_add(array('ui.sortable'),'none');    
  }
}

/**
 * Implementation of hook_views_query_alter
 */
function view_sort_views_query_alter(&$view, &$query){
  // We don't alter if the URL is for the popup
  if(arg(0)!='views-sort'){
    $sort_orders = variable_get('view_sort-limits', array());
    if(isset($sort_orders[$view->name])){
      $view->pager['items_per_page'] = $sort_orders[$view->name]; 
      $view->pager['use_pager'] = false;
    }
  }
}

/**
 * Implementation of hook_views_api().
 */
function view_sort_views_api() {
  return array('api' => 2);
}