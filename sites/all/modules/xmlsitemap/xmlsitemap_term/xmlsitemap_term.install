<?php
// $Id$

/**
 * @file
 * Install file for XML Sitemap: Term
 */

/**
 * Implementation of hook_requirements().
 */
function xmlsitemap_term_requirements($phase) {
  $t = get_t();
  $requirements = array();
  if (in_array($GLOBALS['db_type'], array('mysql', 'mysqli')) && version_compare(db_version(), '4.0.14') < 0) {
    $requirements['xmlsitemap_term_sql'] = array(
      'title' => $t('XML Sitemap: Term'),
      'value' => $t('Your MySQL version is too low. &ldquo;XML Sitemap: Term&rdquo; requires MySQL 4.0.14 or higher.'),
      'severity' => REQUIREMENT_ERROR,
    );
  }
  return $requirements;
}

/**
 * Implementation of hook_install().
 */
function xmlsitemap_term_install() {
  switch ($GLOBALS['db_type']) {
    case 'mysql':
    case 'mysqli':
      db_query("CREATE TABLE {xmlsitemap_term} (
        tid int,
        last_changed int(11),
        previously_changed int(11),
        priority_override float,
        PRIMARY KEY (tid)
      ) /*!40100 DEFAULT CHARACTER SET utf8 */;");
      break;
    case 'pgsql':
      db_query("CREATE TABLE {xmlsitemap_term} (
        tid integer,
        last_changed integer,
        previously_changed integer,
        priority_override real,
        PRIMARY KEY (tid)
      );");
      break;
  }
}

/**
 * Implementation of hook_enable().
 */
function xmlsitemap_term_enable() {
  $weight = db_result(db_query("SELECT weight FROM {system} WHERE type = 'module' AND name = 'pathauto'"));
  if ($weight !== FALSE) {
    db_query("UPDATE {system} SET weight = %d WHERE type = 'module' AND name = 'xmlsitemap_term'", ++$weight);
  }
  db_query("
    INSERT INTO {xmlsitemap_term} (tid, last_changed)
    SELECT td.tid, %d FROM {term_data} td
    LEFT JOIN {xmlsitemap_term} xt ON xt.tid = td.tid
    WHERE xt.tid IS NULL
  ", time());
  xmlsitemap_update_sitemap();
}

/**
 * Implementation of hook_disable().
 */
function xmlsitemap_term_disable() {
  xmlsitemap_update_sitemap();
}

/**
 * Implementation of hook_uninstall().
 */
function xmlsitemap_term_uninstall() {
  db_query("DROP TABLE {xmlsitemap_term}");
  $settings = db_query("SELECT name FROM {variable} WHERE name LIKE 'xmlsitemap\_term\_%'");
  while ($variable = db_fetch_object($settings)) {
    variable_del($variable->name);
  }
}

/**
 * Implementation of hook_update_N().
 *
 * Drop the pid column now that we know how to join on the src index of the
 * url_alias table.
 */
function xmlsitemap_term_update_2() {
  return array(
    update_sql("ALTER TABLE {xmlsitemap_term} DROP pid"),
  );
}

