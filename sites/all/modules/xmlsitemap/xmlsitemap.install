<?php
// $Id$

/**
 * @file
 * Install file for XML Sitemap
 */

/**
 * Implementation of hook_install().
 */
function xmlsitemap_install() {
  $t = get_t();
  switch ($GLOBALS['db_type']) {
    case 'mysql':
    case 'mysqli':
      db_query("CREATE TABLE {xmlsitemap} (
        loc varchar(128) NOT NULL default '',
        lastmod int(11),
        changefreq int(11),
        priority float
      ) /*!40100 DEFAULT CHARACTER SET utf8 */;");
      break;
    case 'pgsql':
      db_query('CREATE OR REPLACE FUNCTION first(anyelement, anyelement) RETURNS anyelement AS \'SELECT COALESCE($1, $2);\' LANGUAGE \'sql\';');
      @db_query("DROP AGGREGATE first(anyelement)");
      db_query("CREATE AGGREGATE first(
        sfunc = first,
        basetype = anyelement,
        stype = anyelement
      );");
      db_query("CREATE TABLE {xmlsitemap} (
        loc varchar(128) NOT NULL default '',
        lastmod integer,
        changefreq integer,
        priority real
      );");
      break;
  }
  db_query("DELETE FROM {url_alias} WHERE dst LIKE 'sitemap%.xml'");
}

/**
 * Implementation of hook_enable().
 */
function xmlsitemap_enable() {
  xmlsitemap_update_sitemap();
}

/**
 * Implementation of hook_uninstall().
 */
function xmlsitemap_uninstall() {
  db_query("DROP TABLE {xmlsitemap}");
  $settings = db_query("SELECT name FROM {variable} WHERE name LIKE 'xmlsitemap\_%'");
  while ($variable = db_fetch_object($settings)) {
    variable_del($variable->name);
  }
}

/**
 * Implementation of hook_update_N().
 */
function xmlsitemap_update_1() {
  $ret = array();
  $t = get_t();
  switch ($GLOBALS['db_type']) {
    case 'mysql':
    case 'mysqli':
      $ret[] = update_sql("CREATE TABLE {xmlsitemap} (
        loc varchar(128) NOT NULL default '',
        lastmod int(11),
        changefreq int(11),
        priority float
      ) /*!40100 DEFAULT CHARACTER SET utf8 */;");
      break;
    case 'pgsql':
      $ret[] = update_sql("CREATE TABLE {xmlsitemap} (
        loc varchar(128) NOT NULL default '',
        lastmod integer,
        changefreq integer,
        priority real
      );");
      break;
  }
  drupal_install_modules(array('xmlsitemap_menu'));
  $mid = db_result(db_query_range("SELECT mid FROM {menu} WHERE pid = 0 AND title = '%s'", t('XML Sitemap'), 0, 1));
  $result = db_query("SELECT * FROM {xmlsitemap_additional}");
  while ($link = db_fetch_object($result)) {
    $link->priority = isset($link->priority) ? $link->priority : variable_get('xmlsitemap_additional_links_priority', 0.5);
    $item = array(
      'mid' => db_next_id('{menu}_mid'),
      'pid' => $mid,
      'path' => $link->path,
      'title' => $link->path,
      'weight' => $link->priority * 20 - 10,
      'type' => MENU_CUSTOM_ITEM | MENU_MODIFIED_BY_ADMIN,
    );
    db_query("INSERT INTO {menu} (mid, pid, path, title, weight, type) VALUES (%d, %d, '%s', '%s', %d, %d)", $item);
  }
  menu_rebuild();
  $ret[] = update_sql("DROP TABLE {xmlsitemap_additional}");
  variable_del('xmlsitemap_additional_links_priority');
  $path = file_directory_path() .'/xmlsitemap';
  if ($dir = @opendir($path)) {
    while (($file = readdir($dir)) !== FALSE) {
      if ($file != '.' && $file != '..') {
        unlink("$path/$file");
      }
    }
    closedir($dir);
    rmdir($path);
  }
  return $ret;
}

