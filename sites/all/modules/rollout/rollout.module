<?php
/* $Id$ */

/** 
 * @file rollout.module
 * "Rolls out" modules to multiple sites.
 */

/** 
 * Implementation of hook_menu: Define menu links.
 * 
 * @note See hook_menu for a description of parameters and return values.
 */
function rollout_menu($may_cache) {
  $items = array();
  $access_modules = user_access('administer site configuration');
  if ($may_cache){
    $items[] = array(
      'path' => 'admin/build/rollout',
      'title' => t('Roll Out'),
      'description' => t('Install modules across a multisite configuration.'),
      'callback' => 'drupal_get_form',
      'callback arguments' => array('system_modules'),
      'access' => $access_modules);
    $items[] = array('path' => 'admin/build/rollout/list',
      'title' => t('List'),
      'type' => MENU_DEFAULT_LOCAL_TASK,
      'access' => $access_modules);
    $items[] = array(
      'path' => 'admin/build/rollout/uninstall',
      'title' => t('Uninstall'),
      'callback' => 'drupal_get_form',
      'callback arguments' => array('system_modules_uninstall'),
      'type' => MENU_LOCAL_TASK,
      'access' => $access_modules);
    $items[] = array(
      'path' => 'admin/build/rollout/settings',
      'title' =>('Apply settings page'),
      'callback' => 'drupal_get_form',
      'callback arguments' => array('rollout_apply_settings'),
      'type' => MENU_CALLBACK,
      'access' => $access_modules);
  }
  return $items;
}

// Not too sure why this is required - it seems to be though
function rollout_apply_settings($form_id, $form_values){
	if(isset($_REQUEST['form_id'])){
	  return drupal_get_form($_REQUEST['form_id']);
	}
	else {
		return array();
	}
}

function rollout_apply_settings_submit($form_id, $form_values){
	// We're sent a form, lets sort it out.
	// Get the form ID, and see if there is a method with this name, if not, DON'T PANIC!
	$form_submits = call_user_func($form_id);
	$form_submits = array_keys($form['#submit']);
	if (count($form_submits)>0){
		foreach ($form as $form_submit_method){
			call_user_func($form_submit_method, $form_id, $form_values);
		}
	}
	else {
		if (function_exists($form_id.'_submit')){
		  call_user_func($form_id.'_submit',$form_id, $form_values);
		}
		else {
			system_settings_form_submit($form_id, $form_values);
		}
	}
  // Check to see if this is to be "Rolled out", if so, do it.
  if(isset($form_values['rollout_settings']['apply_settings']) && $form_values['rollout_settings']['apply_settings']){
  	// Execute the rpc on this - HUZZAH!
  	unset($form_values['rollout_settings']);// FIXME - Is this required? Not sure
  	_execute_rpc('rollout_server.settings', $form_id, $form_values, " settings applied");
  }
  // Simply redirect to the "admin" page
  drupal_goto("admin");
}

function rollout_modules_uninstall_submit($form_id, $form_values){
  // We're not using the system_modules_uninstall_submit method as it includes
  // a nasty "drupal_goto".

	// Following directly taken from system.module
	// ---------------------------------------------
	// Make sure the install API is available.
  include_once './includes/install.inc';

  // Call the uninstall routine for each selected module.
  foreach (array_filter($form_values['uninstall']) as $module => $value) {
    drupal_uninstall_module($module);
  }
  drupal_set_message(t('The selected modules have been uninstalled locally.'));
  // ---------------------------------------------
  // Next, we need to call a XML-RPC function on the other sites to 
  // make the changes we've just made locally.
  // Get a list of sites, and for each, call the XMLRPC.  Add a message to Drupal
  // if there is an error, or success.
  _execute_rpc('rollout_server.uninstall', $form_id, $form_values, " modules uninstalled");
}

function _execute_rpc($method, $form_id, $form_values, $success = "Rolled Out"){
  global $GLOBALS;
  $sites_dir = dirname($GLOBALS['_SERVER']['SCRIPT_FILENAME']) . '/sites'; // FIXME - Is the sites folder always relative to index.php in this way
  $sites = file_scan_directory($sites_dir,'^',array('.', '..', 'all','default'), 0, FALSE);
  $sites = array_keys($sites);
  foreach ($sites as $site){
    if (is_dir($site)){
      $basename = basename($site);
      $url = 'http://'.$basename.'/xmlrpc.php';
      $methods = xmlrpc($url, 'system.listMethods');
      // Check that the rollout_server is installed on each of the sites.
      if (is_array($methods) && in_array($method,$methods)){
        // If rolloutserver present, then fire at will (Poor Will).
        $rollout_return = xmlrpc($url, $method, $form_id, $form_values);
        if ($rollout_return){
          drupal_set_message($basename . ' ' . $success);
        }
        else {
          drupal_set_message($basename. ' failed','error');
        }
      } else {
        drupal_set_message($basename. ' doesn\'t support rollout','error');
      }
    }
  }
}

function rollout_modules_submit($form_id, $form_values) {
  // We now have the changes, Christ, what do we do with these?
  // start by calling the local system_modules_submit().  This means that 
  // we don't need the server running where the client is running. Feel
  // free to comment out the following line, and ensure that you have the 
  // server running on the client site.
  system_modules_submit($form_id, $form_values);

  // Next, we need to call a XML-RPC function on the other sites to 
  // make the changes we've just made locally.
  // Firstly, let's modify the $form_values slightly, so that rollout isn't installed on remote sites,
  // and rollout_server isn't removed.
  $form_values['validation_modules']['rollout']->status = 0;
  $form_values['status']['rollout'] = 0;
  $form_values['validation_modules']['rollout_server']->status = 1;
  $form_values['status']['rollout_server'] = 1;
  _execute_rpc('rollout_server.install', $form_id, $form_values);
}

/**
 * Implementation of hook_form_alter
 */
function rollout_form_alter($form_id, &$form) {
	// URLs to Avoid ---------------------
	$urls = array(
	 //'admin/content/', 
	 'admin/user/access',
	 'admin/user/search',
	 'admin/user/user',
	 'admin/logs/'
	);
	if (isset($_GET['q'])){
		foreach ($urls as $url)
		if (strpos($_GET['q'],$url)===0){
			return;
		}		
	}
	switch ($form['#id']){
		case 'system-modules':
      if (isset($_GET['q']) && substr($_GET['q'],0,19)=='admin/build/rollout'){
		    // hide the rollout and rollout_server    
		    unset($form['name']['rollout'], $form['version']['rollout'], $form['description']['rollout'], $form['throttle']['rollout'], $form['throttle']['#options']['rollout']);
		    $form['status']['rollout'] = array('#type' => 'hidden', '#value' => 1);
		    unset($form['name']['rollout_server'], $form['version']['rollout_server'], $form['description']['rollout_server'], $form['throttle']['rollout_server'], $form['throttle']['#options']['rollout_server']);
		    $form['status']['rollout_server'] = array('#type' => 'hidden', '#value' => 0);
		    
		    $form['#action'] = url('admin/build/rollout');
		    $form['#submit'] = array('rollout_modules_submit'=>array());
      }
		  break;
	  case 'system-modules-uninstall':
      if (isset($_GET['q']) && substr($_GET['q'],0,19)=='admin/build/rollout'){
	      $form['#action'] = '/admin/build/rollout/uninstall';
	  	  $form['#submit'] = array('rollout_modules_uninstall_submit'=>array());
      }
	  	break;
	  // Forms to Avoid ---------------------
	  case 'search-block-form':
	  case 'system-file-system-settings':
	  case 'system-site-information-settings':
	  	break;
	  default:
	  	// Add the "apply to all selection box".
	  	if (isset($_GET['q']) && substr($_GET['q'],0,6)=='admin/'){
		  	$form['rollout'] = array(
		  	  '#title' => t('Roll out'),
		  	  '#type' => 'fieldset',
		  	  '#weight' => -100 
		  	);
		  	$option = array('apply_settings' => t('apply these settings to all sites'));
		  	$form['rollout']['rollout_settings'] = array(
		  	  '#type' => 'checkboxes',
		  	  '#options' => $option,
	        '#DANGEROUS_SKIP_CHECK'  =>  TRUE
		  	);
		  	$form['#action'] = '/admin/build/rollout/settings';
		  	$form['#submit'] = array('rollout_apply_settings_submit'=>array());
	  	}
	  	break;
	}
}