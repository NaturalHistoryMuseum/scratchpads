<?php

/**
 * Implementation of hook_menu
 */
function femail_menu(){
  return array(
    'user/%user/femail' => array(
      'title' => 'Forum/E-mail integration',
      'page callback' => 'femail_user_settings',
      'page arguments' => array(1),
      'access callback' => 'user_edit_access',
      'access arguments' => array(1),
      'type' => MENU_LOCAL_TASK,
      'file' => 'femail.pages.inc',
    )
  );
}
/**
 * Implementation of hook_theme_registry_alter
 */
function femail_theme_registry_alter(&$theme_registry){
  $theme_registry['forums']['template'] = drupal_get_path('module','femail').'/forums';
  $theme_registry['forums']['theme path'] = drupal_get_path('module','femail');
  $theme_registry['forums']['theme paths'] = array(drupal_get_path('module','femail'));
  $theme_registry['forums']['preprocess functions'] = array_merge($theme_registry['forums']['preprocess functions'], array('template_preprocess_femail_forums'));
}

/**
 * Defined above in hook_theme_registry_alter
 */
function template_preprocess_femail_forums(&$variables){
  if($variables['tid']){
    // We're viewing a Forum, or a Container, lets check this isn't a container
    if(!in_array($variables['tid'], variable_get('forum_containers', array()))){
      // We're viewing a forum
      $variables['show_femail_link'] = $variables['tid'];
    }
  }
}

/**
 * Implementation of hook_theme
 */
function femail_theme($existing, $type, $theme, $path) {
  return array(
    'femail_link' => array(
      'arguments' => array('tid' => NULL),
      'file' => 'femail.theme-functions.php'
    )
  );
}

/**
 * Implementation of hook_taxonomy
 */
function femail_taxonomy($op, $type, $array = NULL){
  if($type == 'term'){
    $emails = variable_get('femail_emails', array());
    if($op == 'delete'){
      unset($emails[$array['tid']]);
      variable_set('femail_emails', $emails);      
    } else {
      // Check if this is a term from the forum vocab
      if($array['vid'] == variable_get('forum_nav_vocabulary', 0)){
        $emails = variable_get('femail_emails', array());
        unset($emails[$array['tid']]);
        global $base_url;
        $parts = parse_url($base_url);
        $email = preg_replace("/[^0-9a-z\-]/","",strtolower(str_replace(" ", "-", $array['name'])));
        if(array_search($email . '@' . $parts['host'], $emails)){
          $i = 2;
          while(array_search($email."_".$i.'@'.$parts['host'], $emails)){
            $i++;
          }
          $email = $email."_".$i;
        }
        $emails[$array['tid']] = $email . '@' . $parts['host'];
        variable_set('femail_emails', $emails);      
      }      
    }
  }
}

function _femail_get_emails($tid, $account){
  $results = db_query("SELECT DISTINCT CONCAT(name, ' <', mail, '>') as mail FROM {users} u, {femail_user_subscriptions} f WHERE u.uid = f.uid AND (tid = %d OR tid = 0) AND u.uid != %d", $forum_tid, $account->uid);
  $emails = array();
  while($row = db_fetch_array($results)){
    $emails[] = $row['mail'];
  }
  return $emails;
}

/**
 * Implementation of hook_comment
 */
function femail_comment($form_values, $op){
  if($op == 'insert'){
    $node = node_load($form_values['nid']);
    if(isset($node->forum_tid) && $node->forum_tid){
      // This comment is being added to a forum topic, lets do the do!
      // Lets get the parent msgid so that we can send this out with the 
      // in-reply-to header set
      $msgid = db_fetch_array(db_query("SELECT msgid FROM {femail_msgs} WHERE nid = %d AND cid = %d", $form_values['nid'], $form_values['pid'] ? $form_values['pid']:0));
      global $user;
      $emails = _femail_get_emails($node->forum_tid, $user);
      if(count($emails)){
        // We're sending out a message, lets prepare the message
        $from_emails = variable_get('femail_emails', array());
        // Set the msgid        
        global $base_url;
        $parts = parse_url($base_url);
        $msgid = '<'.md5($node->vid . $from_emails[$forum_tid]).'@'.$parts['host'].'>';
        db_query("INSERT INTO {femail_msgs} (nid, msgid, cid) VALUES (%d, '%s', %d)", $node->nid, $msgid, $form_values['vid']);
        // Get the parent msgid so that we can set the "In-reply-to" header
        $inreplyto = array_pop(db_fetch_array(db_query("SELECT msgid FROM {femail_msgs} WHERE nid = %d AND cid = %d", $node->nid, $form_values['pid']?$form_values['pid']:0)));
        $message = array(
          'id' => 'femail_message',
          'from' => $from_emails[$node->forum_tid],
          'subject' => $form_values['subject'],
          'body' => drupal_wrap_mail($form_values['comment']),
          'headers' => array(
            'From' => $from_emails[$node->forum_tid],
            'Message-id' => $msgid,
            'In-reply-to' => $inreplyto
          )
        );
        foreach($emails as $email){
          $message['to'] = $email;
          drupal_mail_send($message);
        }
      }
    }
  }
}
/**
 * Implementation of hook_nodeapi
 */
function femail_nodeapi(&$node, $op, $a3 = NULL, $a4 = NULL){
  if($op == 'insert' && $node->type == 'forum'){
    // We've added a new forum post, lets mail it out
    // First, we'll get the forum that this has been posted to.
    $forum_tid = $node->taxonomy[variable_get('forum_nav_vocabulary', 0)];
    if($forum_tid){
      // Looks set, now lets get the subscription to this forum, excluding the
      // poster of this message.
      global $user;
      $emails = _femail_get_emails($forum_tid, $user);
      if(count($emails)){
        // We're sending out a message, lets prepare the message
        $from_emails = variable_get('femail_emails', array());
        // Get the message-id (or set it if this was posted directly to the 
        // forum
        $row = db_fetch_array(db_query("SELECT msgid FROM {femail_msgs} WHERE nid = %d AND cid = 0", $node->nid));
        if($row){
          $msgid = array_pop(db_fetch_array($result));
        } else {
          global $base_url;
          $parts = parse_url($base_url);
          $msgid = '<'.md5($node->vid . $from_emails[$forum_tid]).'@'.$parts['host'].'>';
          db_query("INSERT INTO {femail_msgs} (nid, msgid, cid) VALUES (%d, '%s', 0)", $node->nid, $msgid);
        }
        $message = array(
          'id' => 'femail_message',
          'from' => $from_emails[$forum_tid],
          'subject' => $node->title,
          'body' => drupal_wrap_mail($node->body),
          'headers' => array(
            'From' => $from_emails[$forum_tid],
            'Message-id' => $msgid
          )
        );
        foreach($emails as $email){
          $message['to'] = $email;
          drupal_mail_send($message);
        }
      }
    }
  }
}