<?php

/**
 * Implementation of hook_menu
 */
function femail_menu(){
  return array(
    'user/%user/femail' => array(
      'title' => 'Forum/E-mail integration',
      'page callback' => 'femail_user_settings',
      'page arguments' => array(1),
      'access callback' => 'user_edit_access',
      'access arguments' => array(1),
      'type' => MENU_LOCAL_TASK,
      'file' => 'femail.pages.inc',
    ),
    'femail/verify/%/%' => array(
      'title' => 'Forum/E-mail integration',
      'page callback' => 'femail_email_verify',
      'page arguments' => array(2, 3),
      'access arguments' => array('access content'),
      'type' => MENU_CALLBACK,
      'file' => 'femail.pages.inc'    
    ),
    'femail/remove/%user/%' => array(
      'title' => 'Forum/E-mail integration',
      'page callback' => 'femail_email_remove',
      'page arguments' => array(2, 3),
      'access callback' => 'user_edit_access',
      'access arguments' => array(2),
      'type' => MENU_CALLBACK,
      'file' => 'femail.pages.inc'    
    )
  );
}


/**
 * Implementation of hook_mail
 */
function femail_mail($key, &$message, $params){
  $language = $message['language'];
  switch($key){
    case 'verify':
      $message['subject'] = t('!site requests verification', array('!site' => variable_get('site_name', 'Drupal')), $language->language);
      $message['body']  = t('Please click on the following link to verify your email address');
      $message['body'] .= "\n\n";
      $message['body'] .= url('femail/verify/'.$params.'/'.md5($params . variable_get('femail_install_time', 'INSTALLTIME')), array('absolute' => TRUE));
      break;
  }
}

/**
 * Implementation of hook_perm
 */
function femail_perm(){
  return array('post by femail');
}
/**
 * Implementation of hook_theme_registry_alter
 */
function femail_theme_registry_alter(&$theme_registry){
  $theme_registry['forums']['template'] = drupal_get_path('module','femail').'/forums';
  $theme_registry['forums']['theme path'] = drupal_get_path('module','femail');
  $theme_registry['forums']['theme paths'] = array(drupal_get_path('module','femail'));
  $theme_registry['forums']['preprocess functions'] = array_merge($theme_registry['forums']['preprocess functions'], array('template_preprocess_femail_forums'));
}

/**
 * Defined above in hook_theme_registry_alter
 */
function template_preprocess_femail_forums(&$variables){
  if($variables['tid']){
    // We're viewing a Forum, or a Container, lets check this isn't a container
    if(!in_array($variables['tid'], variable_get('forum_containers', array()))){
      // We're viewing a forum
      $variables['show_femail_link'] = $variables['tid'];
    }
  }
}

/**
 * Implementation of hook_theme
 */
function femail_theme($existing, $type, $theme, $path) {
  return array(
    'femail_link' => array(
      'arguments' => array('tid' => NULL),
      'file' => 'femail.theme-functions.php'
    )
  );
}

/**
 * Implementation of hook_taxonomy
 */
function femail_taxonomy($op, $type, $array = NULL){
  if($type == 'term'){
    $emails = variable_get('femail_emails', array());
    if($op == 'delete'){
      unset($emails[$array['tid']]);
      variable_set('femail_emails', $emails);      
    } else {
      // Check if this is a term from the forum vocab
      if($array['vid'] == variable_get('forum_nav_vocabulary', 0)){
        unset($emails[$array['tid']]);
        global $base_url;
        $parts = parse_url($base_url);
        $email = preg_replace("/[^0-9a-z-]/","",strtolower(str_replace(" ", "-", $array['name'])));
        // Make sure this email isn't already in use.
        if(array_search($email . '@' . $parts['host'], $emails)){
          $i = 2;
          while(array_search($email."_".$i.'@'.$parts['host'], $emails)){
            $i++;
          }
          $email = $email."_".$i;
        }
        // Set it and save it
        $emails[$array['tid']] = $email . '@' . $parts['host'];
        variable_set('femail_emails', $emails);      
      }      
    }
  }
}

/**
 * Implementation of hook_comment
 */
function femail_comment($form_values, $op){
  if($op == 'insert'){
    $node = node_load($form_values['nid']);
    if(isset($node->forum_tid) && $node->forum_tid){    
      // Get the parent msgid so that we can set the "In-reply-to" header, Note,
      // this may not be set if there are no users subscribed to the forum, OR
      // if the only user subscribed posted the comment.  We'll still caryy on
      // trying to send the message though.
      $row = db_fetch_array(db_query("SELECT msgid FROM {femail_msgs} WHERE nid = %d AND cid = %d", $node->nid, $form_values['pid']?$form_values['pid']:0));
      // Include file
      module_load_include('mail.inc','femail');
      if(is_array($row)){
        _femail_send_message($node->forum_tid, $form_values['subject'], $form_values['comment'], $node->nid, $form_values['cid'], array_pop($row));        
      } else {
        _femail_send_message($node->forum_tid, $form_values['subject'], $form_values['comment'], $node->nid, $form_values['cid']);
      }
    }
  }
}

/**
 * Implementation of hook_nodeapi
 */
function femail_nodeapi(&$node, $op, $a3 = NULL, $a4 = NULL){
  if($op == 'insert' && $node->type == 'forum'){
    // We've added a new forum post, lets mail it out
    // First, we'll get the forum that this has been posted to.
    $forum_tid = $node->taxonomy[variable_get('forum_nav_vocabulary', 0)];
    if($forum_tid){
      module_load_include('mail.inc','femail');
      _femail_send_message($forum_tid, $node->title, $node->body, $node->nid);
    }
  }
}