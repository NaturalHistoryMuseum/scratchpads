<?php
// $Id$

/**
 * @file
 * Add a field to the taxonomy term form that will enable you to add a node!
 */

function bio_taxonomy_menu() {
  $items = array();
  $items[] = array('path' => 'bio_taxonomy/autocomplete',
    'access' => true, 
    'title' => t('Taxonomy node callback'),
    'callback' => 'bio_taxonomy_autocomplete',
    'type' => MENU_CALLBACK);    

  $items[] = array('path' => 'taxonomy/term',
    'title' => t('Taxonomy term'),
    'callback' => 'bio_taxonomy_term_page',
    'access' => user_access('access content'),
    'type' => MENU_CALLBACK);                     
  return $items;
}

function bio_taxonomy_term_page($str_tids = '', $depth = 0, $op = 'page') {
  $output = taxonomy_term_page($str_tids, $depth, $op);
  $result = db_query("SELECT nid FROM {taxonomy_bio} WHERE tid = ".$str_tids);
  $biotax = db_fetch_object($result);
  if (isset($biotax->nid)){
    $node = node_load($biotax->nid);
    biblio_view($node);
    $output = '<div style="border: solid 1px black;padding: 20px;"><h1>Authority</h1>'.node_view($node,false,false,false).'</div>'.$output;
  }
  return $output;
}

function bio_taxonomy_taxonomy($op, $type, $array= NULL){
  // This will insert the extra data into the bio_taxonomy table.
  if ($type=="term"){
    switch($op){
      case "insert":
        if (isset($array['authority']) && strlen(trim($array['authority']))>0)
      db_query("INSERT INTO taxonomy_bio VALUES (".$array['tid'].",".$array['authority'].");");
        break;
      case "update":
        db_query("DELETE FROM taxonomy_bio WHERE tid = ".$array['tid']);
        if (isset($array['authority']) && strlen(trim($array['authority']))>0)
          db_query("INSERT INTO taxonomy_bio VALUES (".$array['tid'].",".$array['authority'].");");
        break;
      case "delete":
        db_query("DELETE FROM taxonomy_bio WHERE tid = ".$array['tid']);
        break;
    }
  }
}

function bio_taxonomy_autocomplete($string = ''){
  $matches = array();
  if ($string) {
    $result = db_query_range("SELECT title,{biblio}.nid,biblio_authors,biblio_year FROM {node} INNER JOIN {biblio} ON {biblio}.nid = {node}.nid WHERE type='biblio' AND LOWER(title) LIKE LOWER('%s%%')", $string, 0, 10);
    while ($biblio = db_fetch_object($result)) {
      $matches[$biblio->nid] = check_plain($biblio->title." - ".$biblio->biblio_authors." - ".$biblio->biblio_year);
   }
  }
  print drupal_to_js($matches);
  exit();
}

/**
 * Implementation of hook_form_alter()
 */
function bio_taxonomy_form_alter($form_id, &$form){
  if (isset($form['form_id']) && $form['form_id']['#id'] == "edit-taxonomy-form-term") {
  $biotax = null;
  if (isset($form['tid']['#value'])){
    $result = db_query("SELECT nid FROM {taxonomy_bio} WHERE tid = ".$form['tid']['#value']);
      $biotax = db_fetch_object($result);
  }
    $form['authority'] = array(
      '#description' => t('Enter the title of the work which is the authority for this name.  This will be replaced by the ID of the work if it is present in our database.'),
      '#title' => t('Authority'),
      '#autocomplete_path' => 'bio_taxonomy/autocomplete',
      '#type' => 'textfield',
      '#weight' => -9,
    '#default_value' => $biotax->nid 
    );
  }
}
