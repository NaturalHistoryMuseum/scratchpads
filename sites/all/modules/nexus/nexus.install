<?php 

// $Id$ 

/** 
*Implementation of hook_install(). 
*/ 
function nexus_install() { 
  
drupal_install_schema('nexus'); 

module_load_include('module', 'nexus', 'nexus');

$character_vocabulary = array(
 'name' => 'Character vocabulary',
 'hierarchy' => 1,
 'module' => 'nexus',
 'nodes' => array(),
 'required' => 1,
 'multiple' => 1,
);

$nexus_node_info = nexus_node_info();

  // Ensure all out nexus node types are allowed for the vocabulary
  foreach($nexus_node_info as $nexus_node_type => $nexus_node){

    $character_vocabulary['nodes'][$nexus_node_type] = $nexus_node_type;

  }

  taxonomy_save_vocabulary($character_vocabulary);
  
  update_sql("UPDATE {system} SET weight = 2 WHERE name = 'nexus'");

}



/** 
*Implementation of hook_uninstall(). 
*/ 
function nexus_uninstall() { 

// Delete the vocabs & nodes
_nexus_delete_nodes();

$character_vid = nexus_get_character_vid();

taxonomy_del_vocabulary($character_vid);

drupal_uninstall_schema('nexus'); 

} 

/** 
* Deletes all projects & project nodes
*/
function _nexus_delete_nodes(){
  
  $nexus_nodes = nexus_node_info();
  
  foreach($nexus_nodes as $node_type => $node_info){
    
    $node_types[] = $node_type;
    
  }

  $type_placeholders = db_placeholders($node_types, 'text');

  $sql = 'SELECT n.nid FROM {node} n WHERE n.type IN ('.$type_placeholders.')';
  
  $result = db_query($sql, $node_types); 
  
  while ($node = db_fetch_object($result)) {
  
    node_delete($node->nid);
  
  }

  
}

/** 
*Implementation of hook_schema(). 
*/ 
function nexus_schema() { 
  
$schema['nexus_projects'] = 

  array( 
    'description' => t("A Nexus Data Editor Project."), 
    'fields' => array( 
      'nid'=>array( 
        'type'=>'int', 
        'unsigned' => TRUE, 
        'not null' => TRUE, 
        'default'=>0, 
        'description'=> 'The {node}.nid of the node.', 
        ), 
      'vid'=>array( 
        'type'=>'int', 
        'unsigned' => TRUE, 
        'not null' => TRUE, 
        'default'=>0, 
        'description' => 'Primary Key: The {node}.vid of the node.', 
      ), 
      'taxa_vid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => 'The {vocabulary}.vid of the project vocabulary assigned to the node.',
      ),
      'character_root_tid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => 'The {vocabulary}.tid of the root character term assigned to the node.',
      ),
      'settings' => array(
        'type' => 'text',
        'not null' => FALSE,
        'size' => 'big',
        'description' => 'A serialized array of name value pairs for project settings.',
      ),
    ), 
    'indexes' => array(
      'nid' => array('nid'),
      'taxa_vid' => array('taxa_vid'),
      'character_root_tid' => array('character_root_tid')
    ),
    'primary key' => array('vid'),
    
  ); 

  
$schema['nexus_relationships'] = 

  array( 
    'description' => t("Define extra information about the relationship between term intersection - can be OR (/), N/A(-) or Unknown(?)."), 
    'fields' => array( 
      'taxa_tid'=>array( 
        'type'=>'int', 
        'unsigned' => TRUE, 
        'not null' => TRUE, 
        'default'=> 0, 
        'description'=> 'The taxa term.tid.', 
        ),
      'character_tid'=>array( 
        'type'=>'int', 
        'unsigned' => TRUE, 
        'not null' => TRUE, 
        'default'=> 0, 
        'description'=> 'The character term.tid.', 
        ),
      'operator'=>array( 
        'type' => 'varchar',
        'length' => 1,
        'not null' => TRUE,
        'default' => '',
        'description'=> 'The relationship operator / or - or ?', 
        ),
     ),
     'indexes' => array(
       'taxa_tid' => array('taxa_tid'),
       'character_tid' => array('character_tid')
     ),
    
  );
  
  $schema['nexus_term_settings'] = 

    array( 
      'description' => t("Taxonomy settings - is a Taxa collapsed or width of columns."), 
      'fields' => array( 
        'tid'=>array( 
          'type'=>'int', 
          'unsigned' => TRUE, 
          'not null' => TRUE, 
          'default'=> 0, 
          'description'=> 'The term.tid.', 
          ),
          
        'value'=>array( 
          'type'=>'int', 
          'unsigned' => TRUE, 
          'not null' => TRUE, 
          'default'=> 1, 
          'description'=> 'The value setting - integer denoting width or collapsed / numeric is true.', 
          ),
          
        'setting_type'=>array( 
          'type' => 'varchar',
          'length' => 32,
          'not null' => TRUE,
          'default' => '',
          'description'=> 'Type of setting - either width, numeric or collapsed', 
          ),
                
       ),
       
       'indexes' => array(
         'setting_type' => array('setting_type')
       ),
       
       'primary key' => array('tid'),

    );
    


return $schema; 

} 



