<?php
/* $Id$*/
/* $HeadURL$*/

/** 
 * @file leftandright.module
 * 
 * Adds a left and right table which is linked to the taxonomy tables that in 
 * turn enables the retrieval of trees to be much quicker.  It's just magic
 * really.
 * 
 * Changes to this module since D5
 * - Only forces itself on large taxonomies (>2000 terms).
 * - Better coding (Christ alive eating a banana, my code can be pants at times)
 */

/*******************************************************************************
 * HOOKS
 ******************************************************************************/
//Implementation of hook_viewsapi
function leftandright_views_api(){
  return array(
    'api' => 2,
    'path' => drupal_get_path('module','leftandright') . "/views"
  );
}
function leftandright_perm(){
  return array('administer leftandright');
}
// hook_menu
function leftandright_menu(){
  $items['admin/content/taxonomy/leftandright'] = array(
    'title' => 'Rebuild Tree',
    'page callback' => 'leftandright_overview_vocabularies',
    'access arguments' => array('administer taxonomy'),
    'file' => 'leftandright.admin.inc',
    'type' => MENU_LOCAL_TASK);
  $items['leftandright/update'] = array(
    'title' => '',
    'description' => '',
    'page callback' => 'leftandright_rebuild_tree_page',
    'access arguments' => array('administer site configuration'),
    'type' => MENU_CALLBACK
  );
  $items['admin/settings/leftandright'] = array(
    'title' => 'Leftandright',
    'description' => 'Change the default Leftandright settings.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('leftandright_admin_settings'),
    'access arguments' => array('administer leftandright'),
    'file' => 'leftandright.admin.inc'
  );
  $items['admin/content/taxonomy/%'] = array(
    'title' => 'List terms',
    'page callback' => 'leftandright_overview_terms',
    'page arguments' => array(3),
    'access arguments' => array('administer taxonomy'),
    'type' => MENU_CALLBACK,
    'file' => 'leftandright.admin.inc'
  );
  return $items;
}

// hook_help
function leftandright_help($path, $arg) {
  switch ($path) {
    case 'admin/content/taxonomy/leftandright':
      return '<p>'. t('Click to rebuild a tree.  There is usually no need to rebuild a tree manually, however, if you\'ve been experiencing unusual results from taxonomic queries, then this may help.') .'</p>';
      break;
    case 'admin/content/taxonomy':
      return '<p>'.t('Taxonomies with greater than @leftandright_minimum terms will use the <a href="http://drupal.org/project/leftandright">Left and right module</a> for improved performance.  Unfortunately this means that these taxonomies no longer support the reordering of terms.', array('@leftandright_minimum'=>variable_get('leftandright_minimum_terms',1000))).'</p>';
      break;
  }
}

/**
 * The following function adds the data to the left and right table when a new
 * term is added to the site, or it alters the data if the parent of a term is
 * changed, or if the name itself is changed.  etc
 */
// hook_taxonomy
function leftandright_taxonomy($op, $type, $array = NULL){
  if($type=='term'){
    switch($op){
      case 'delete':
        $result = db_query('SELECT lft, rgt FROM {leftandright} WHERE tid = %d', $array['tid']);
        $row = db_fetch_array($result);
        db_query('UPDATE {leftandright} SET lft = lft-1, rgt=rgt-1 WHERE lft > %d', $row['lft']);
        db_query('UPDATE {leftandright} SET lft = lft-1, rgt=rgt-1 WHERE lft > %d', $row['rgt']);
        db_query('DELETE FROM {leftandright} WHERE tid=%d',$array['tid']);
        break;
      case 'update':
        module_load_include('functions.inc','leftandright');
        _leftandright_taxonomy_update($array);
        break;
      case 'insert':
        module_load_include('functions.inc','leftandright');
        _leftandright_taxonomy_insert($array);
        break;
    }
  }
}

/*******************************************************************************
 * ADDITIONAL leftandright FUNCTIONS FOR OTHER MODULES!
 ******************************************************************************/
/**
 * Following function returns TRUE if this term or one of its descendants
 * has been used to tag a node, FALSE if not.
 */
function leftandright_descendant_used($tid){
  //return false;
  $result = db_query("SELECT COUNT(*) FROM {term_node} WHERE tid IN (SELECT tid FROM {leftandright} WHERE lft>=(SELECT lft FROM {leftandright} WHERE tid=%d) AND rgt<=(SELECT rgt FROM {leftandright} WHERE tid=%d))",$tid,$tid);
  if(array_pop(db_fetch_array($result))){
    return true;
  } else {
    return false;
  }
}

/*******************************************************************************
 * REBUILD TREE
 ******************************************************************************/
// Returns an indexed array of PIDs and the vocabularies associated with these PIDs
function leftandright_trees_rebuilding($vid = 0){
  exec('ps -ef | grep landr | grep -v grep',$exec_output);
  $rebuilding=array();
  foreach($exec_output as $process){
    // Split the process by " " as the last part should be the vocabulary ID
    $parts = explode(" ",preg_replace("/[\ ]*\ /"," ",$process));
    $exec_vid = array_pop($parts);
    if($vid == $exec_vid){
      return true;
    }
    $pid = $parts[1];
    $rebuilding[$pid]=$exec_vid;
  }
  if($vid){
    return false;
  } 
  return $rebuilding;
}
function leftandright_rebuild_tree_page($vid){
  if(leftandright_trees_rebuilding($vid)){
    drupal_set_message(t('Already rebuilding vocabulary'));
  } else {
    leftandright_rebuild_tree($vid);
  }
  drupal_goto('admin/content/taxonomy/leftandright');
}
function leftandright_rebuild_tree($vid){
  module_load_include("rebuild.inc", "leftandright");
  _leftandright_rebuild_tree($vid);
}