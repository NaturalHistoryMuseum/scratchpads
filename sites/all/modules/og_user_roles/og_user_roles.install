<?php
// $Id: og_user_roles.install,v 1.1.2.5 2008/05/26 20:10:37 somebodysysop Exp $

function og_user_roles_install() {
  switch ($GLOBALS['db_type']) {
    case 'mysql':
    case 'mysqli':

      db_query("CREATE TABLE {og_users_roles} (
        ogr_id int(10) unsigned NOT NULL DEFAULT '0',
        uid int(10) unsigned NOT NULL DEFAULT '0',
        rid int(10) unsigned NOT NULL DEFAULT '0',
        gid int(10) unsigned NOT NULL DEFAULT '0',
        PRIMARY KEY  (uid, rid, gid)
      ) /*!40100 DEFAULT CHARACTER SET utf8 */;");

      db_query("CREATE TABLE {multinode_access} (
        realm varchar(30) NOT NULL default '',
        groupname varchar(10) NOT NULL default '',
        logic varchar(5) NOT NULL default '',
        weight varchar(5) NOT NULL default '',
        checkstatus int unsigned NOT NULL DEFAULT '0',
        module varchar(60) NOT NULL default '',
        PRIMARY KEY  (realm)
      ) /*!40100 DEFAULT CHARACTER SET utf8 */;");

      break;

    case 'pgsql':

      db_query("CREATE TABLE {og_users_roles} (
        ogr_id int NOT NULL DEFAULT '0',
        uid integer NOT NULL DEFAULT '0',
        rid integer NOT NULL DEFAULT '0',
        gid integer NOT NULL DEFAULT '0',
        PRIMARY KEY  (uid, rid, gid)
      );");

      db_query("CREATE TABLE {multinode_access} (
        realm varchar(30) NOT NULL default '',
        groupname varchar(10) NOT NULL default '',
        logic varchar(5) NOT NULL default '',
        weight varchar(5) NOT NULL default '',
        checkstatus integer unsigned NOT NULL DEFAULT '0',
        module varchar(60) NOT NULL default '',
        PRIMARY KEY  (realm)
      );");

      break;
  }

  drupal_set_message(t('OG User Roles module enabled. Please see the included README file for further installation instructions.'));

}

/**
 * Implementation of hook_uninstall().
 */
function og_user_roles_uninstall() {

  db_query('DROP TABLE {og_users_roles}');
  if (db_table_exists('og_user_test')) db_query('DROP TABLE {og_user_test}');

  drupal_set_message(t('OG User Roles module successfully uninstalled'));
}

/**
 * Update 5290
 * First database update for Drupal 5.x OGR Release 2.9
 * Update og_users_roles table: Add ogr_id column and populate
 */
function og_user_roles_update_5290() {
  $count = 0;
  // See if we are being called for the first time
  if (!isset($_SESSION['og_user_roles_update_5290_nid'])) {
    // These variables keep track of our progress
    $_SESSION['og_user_roles_update_5290_alter'] = 0;
    $_SESSION['og_user_roles_update_5290_nid'] = 0;
    $_SESSION['og_user_roles_update_5290_max'] = db_result(db_query('SELECT COUNT(gid) FROM {og_users_roles}'));
  }

  if ($_SESSION['og_user_roles_update_5290_alter'] == 0) {
    // Alter the table.
    db_query('ALTER TABLE {og_users_roles} ADD ogr_id int NOT NULL');
    $_SESSION['og_user_roles_update_5290_alter'] = 1;
    // Not done yet, so we'll have to come back.
    return array('#finished' => 0);
  }

  // Fetch the nodes 20 at a time
  $result = db_query_range('SELECT uid, rid, gid FROM {og_users_roles} WHERE ogr_id = 0', 0, 20);
  while ($ogr = db_fetch_object($result)) {
    // Update the ogr_id 
    $_SESSION['og_user_roles_update_5290_nid']++;
    db_query("UPDATE {og_users_roles} SET ogr_id = %d WHERE uid = %d AND rid = %d AND gid = %d", $_SESSION['og_user_roles_update_5290_nid'], $ogr->uid, $ogr->rid, $ogr->gid);
  }

  // See if we are done
  if ($_SESSION['og_user_roles_update_5290_nid'] < $_SESSION['og_user_roles_update_5290_max']) {
    // Not done yet. Return the progress.
    return array('#finished' => $_SESSION['og_user_roles_update_5290_nid'] / $_SESSION['og_user_roles_update_5290_max']);
  }
  else {
    drupal_set_message(t('OG User Roles module Update 5290 installed. og_users_roles table updated: added ogr_id column. ' . $_SESSION['og_user_roles_update_5290_nid'] . ' rows modified.'));
    variable_set('og_user_roles_counter', $_SESSION['og_user_roles_update_5290_nid']); 
    // Done. Clean up and indicate we're finished.
    unset($_SESSION['og_user_roles_update_5290_alter']);
    unset($_SESSION['og_user_roles_update_5290_nid']);
    unset($_SESSION['og_user_roles_update_5290_max']);
    return array('#finished' => 1);
  }
}

/**
 * Update 5291
 * Second database update for Drupal 5.x OGR Release 2.9
 * Create multinode_access table
 */
function og_user_roles_update_5291() {
  $items = array();
  $items[] = update_sql("CREATE TABLE {multinode_access} (
        realm varchar(30) NOT NULL default '',
        groupname varchar(10) NOT NULL default '',
        logic varchar(5) NOT NULL default '',
        weight varchar(5) NOT NULL default '',
        checkstatus int unsigned NOT NULL DEFAULT '0',
        module varchar(60) NOT NULL default '',
        PRIMARY KEY  (realm)
      ) /*!40100 DEFAULT CHARACTER SET utf8 */;");
  return $items;
}

?>