<?php
// $Id: creativecommons_lite.module,v 1.2 2007/05/12 16:42:17 gloscon Exp $

/**
 * This module will display 8 cc common license for selected content type 
 *
 */

define('CC_LITE_PATH', drupal_get_path('module', 'creativecommons_lite'));

/**
 * help hook for cclite module
 *
 * @param unknown_type $section
 * @return unknown
 */
function creativecommons_lite_help($section) {

  $cc_lite_desc_short = "Creative Commons eight license for drupal content.";
  switch ($section) {
    case 'admin/modules#description':
      return t($cc_lite_desc_short);
  }
}

/**
 * hook alter to add cc license
 *
 * @param unknown_type $form_id
 * @param unknown_type $form
 * @return unknown
 */
function creativecommons_lite_form_alter($form_id, &$form) { 
  
  // setting for which content type this will show up 
  if ( $form_id == 'node_type_form' && isset($form['identity']['type']) ) {

	  $node_type = $form['#node_type']->type;
     
	  $form['workflow']["creativecommons_lite"] = array(
	    '#type' => 'checkbox',
	    '#title' => t("Allow user to add creativecommon license."),
	    '#description'=>t('User will be able to select license while adding content. Selected license will be displayed in right block on node view page.'),
	    '#return_value' => 1,
        '#default_value' => variable_get("creativecommons_lite_$node_type", 0),
	  );
  }elseif (isset($form['type']) && $form['type']['#value'] .'_node_form' == $form_id ) {
  	 // add license selection field to node
   
    $node = $form['#node'];   // got form 

    if ( variable_get("creativecommons_lite_$node->type", 0) ) {
       $form = array_merge($form, creativecommons_lite_form($node));
       $form['creativecommons_lite']['#weight'] = 29;  //  30 comment and menu and after that author and publishing
       
   }
  }

  // return $form;
}

/**
 * Form for attaching Creative Commons license to a node 
 *
 * @param unknown_type $node 
 * @return unknown
 */
function creativecommons_lite_form($node) {

  $cc_img_path = base_path().CC_LITE_PATH.'/images'; // add module path here 

  $cc_img = '<img src="'.$cc_img_path.'/cc-choose-license.gif" alt="'.t('Creative Commons licenses').'" /> ';

  $cc_txt = '<p><a href="http://creativecommons.org/learn/licenses/" target="_blank">'.t('Creative Commons licenses').'</a> '.

	  t('help you share your work while keeping your copyright. Other people can copy and distribute your work provided they give you credit&mdash;and only on the conditions you specify here.').

	  '<a href="http://creativecommons.org/about/licenses/meet-the-licenses" target="_blank">'.t('Click here to view the explanation of licenses.').'</a> '.

	  t('If you want to offer your work with no conditions, choose the ').'<a href="http://creativecommons.org/licenses/publicdomain/" target="_blank">'.t('public domain').'</a>.</p>';

  // built html output

  $output = t($cc_txt);

  $prefix = 'cc_lite';

  $output1 = creativecommons_lite_select_license_form($node, $prefix);

  // if no license, then don't process the metadata

  //  note: this loses the metadata, need to preserve it somehow... maybe load the hidden layer,

  //  without the link to display:block, and no error handling.

    $form['creativecommons_lite'] = array(
	  '#type' => 'fieldset',
	  '#title' => $cc_img,
	  '#attributes'=>array('class'=>'attachments'),
	  '#collapsible' => FALSE,
      '#collapsed' => FALSE,
	  '#tree'=>TRUE,
	 );
 
	 $form['creativecommons_lite'][] = array('#value'=>$output);

	 $form['creativecommons_lite']['cclite_select_license_form'] = $output1['cclite_select_license_form'];

	 // TODO: Incude meta tags also if cc and other two options selected

    return $form;

}

/**
 * show rdf -- not used for future 
 *
 * @param unknown_type $license
 * @return unknown
 */
function get_license_rdf($license) {  

   if($this->license_type == 'ccdevnations' ) {

     $a = "xmlns=\"http://web.resource.org/cc/\"

    xmlns:dc=\"http://purl.org/dc/elements/1.1/\"

    xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"";

   }
   
   $rdf = "<rdf:RDF$a>\n";

 return '';	// nothing for now 

}

/**
 * return html of a licence
 *
 * @param unknown_type $license
 * @return unknown
 */
function get_license_html($license) {

  $license_info = get_license_info($license);

     $txt = 'More info about '.l(t("Creative Commons Licensing"), 'http://creativecommons.org', array('rel' => 'license', 'title' => $license_info['license_name'], 'target' => '_blank' ))."\n"; 

	 $html = "\n<!--Creative Commons License-->\n";

	 $html .= l(t("This work's Creative Commons license"), $license_info['license_uri'], array('rel' => 'license', 'title' => $license_info['license_name'], 'target' => '_blank' ))."<br>\n";

   if ( $img = $license_info['images'] ) {  

      foreach ($img as $img_tag)

        $html .= l($img_tag, $license_info['license_uri'], array('rel' => 'license', 'target' => '_blank' ), NULL, NULL, FALSE, TRUE) . "\n";

      $html .= '<br />';

    }	 

	$html .= $txt;

	$html .= "<!--/Creative Commons License-->\n";

 return $html;

}

/**
 * Generate HTML for the creativecommons license block
 *
 * @param op the operation from the URL
 * @param delta offset
 * @return s block HTML
 */
function creativecommons_lite_block($op='list', $delta=0, $edit = array()) { 

  // listing of blocks, such as on the admin/block page
  if ($op == "list") { 
  	
     $blocks[0] = array(
       'info' => t('Creativecommon license'),
       'weight' => 0, 
       'enabled' => 1,   // default make it enabled 
       'region' => 'right',  // garland has no right default
       'theme'=>'garland',
       );
       
     return $blocks;
     
  } 
  else if ($op == 'view') {

    switch ($delta) { 
      case 0:
        if (!is_numeric(arg(1))) 
          return;     
       
        $nid = (int)arg(1);
        $node = node_load(array('nid'=>$nid));
        
        if ( $node && arg(0) == 'node' && ( $node->cc_lite_license ) && ( (arg(2)=='view') || (arg(2)=='') ) ) { 
          if ($node->cc_lite_license) {  	  
            // append html 
            $output = get_license_html($node->cc_lite_license);
            
            // append rdf if configured  TODO 	  
            if (variable_get('creativecommons_lite_rdf', FALSE)) { 
              $output .= "<!-- ".get_license_rdf($node->cc_lite_license)." -->";
            }
            
    	    if ($output) { 
    	      $block['content'] =  '<p class="creativecommons">'.$output.'</p>';
    	    }
          }
        }
        
      return $block;
    }
  }// end view 
} 
// end creativecommons_block

/**
 * Return array of 8 available license 
 *
 * @return unknown
 */
function creativecommons_lite_get_license_array() {

  $types = array();

  $types[''] = 'Choose one';
  
  $types['publicdomain'] = 'Public Domain License';

  $types['ccdevnations'] = 'Developing Nations License';

  $types['by-nc-nd'] =  'Attribution Non-commercial No Derivatives';

  $types['by-nc-sa'] = 'Attribution Non-commercial Share Alike';

  $types['by-nc'] = 'Attribution Non-commercial';

  $types['by-nd'] = 'Attribution No Derivatives';

  $types['by-sa'] =  'Attribution Share Alike ';

  $types['by'] = 'Attribution';

  return $types;

}

/**
 * Display license selection form -- no need 
 *
 * @param unknown_type $node
 * @param unknown_type $prefix
 * @return unknown
 */
function creativecommons_lite_select_license_form($node, $prefix) {

  // js to update form?  or rewrite layers with form fields per each license

  $types = array();

  // available license types

  $types = creativecommons_lite_get_license_array();  
  
  if ($avail = variable_get('creativecommons_lite_available_licenses', NULL)) {

	foreach($types as $k => $v) {

	  if( $avail[$k] === $k ) {
          // take it
	  }
	  else {
	    // unset it
		 unset($types[$k]);
	  }
    }
  }
  
  // default to first license in array

  if (!$node->cc->license_type) { 
    $node->cc->license_type = key($types);
  }

    $form['cclite_select_license_form'][$prefix . '_license'] = array(
	  '#type' => 'select',
	  '#tree'=>FALSE,
	  '#title' => t('Select a license'),
	  '#default_value' => $node->cc_lite_license,
	  '#options' => $types,
	  '#attributes' => $extra,
	  '#description' => NULL,
	  '#required'=>TRUE,
	);

 return $form;
}

/**
 * hook_nodeapi to load & insert cclite info 
 *
 * @param unknown_type $node
 * @param unknown_type $op
 * @param unknown_type $arg
 * @param unknown_type $a4
 * @return unknown
 */
function creativecommons_lite_nodeapi(&$node, $op, $arg, $a4) {
  switch($op) {
    case 'validate':
      break;
      
    case 'load':
	   if( variable_get("creativecommons_lite_$node->type", 0) ) { 
	     $result = db_query("select * from {creativecommons_lite} where nid=%d",  $node->nid);
	     $res = db_fetch_array($result);
	     $node->cc_lite_license = $res['data'];
	   }
      break;

    case 'view':
      // added block view 
      break;

    case 'insert':
	  if( variable_get("creativecommons_lite_$node->type", 0) ) { 
	    $result = db_query("INSERT INTO {creativecommons_lite} (nid, data) VALUES (%d, '%s')",  $node->nid, $node->cc_lite_license);
	  }
	  break;

    case 'update':
	  if( variable_get("creativecommons_lite_$node->type", 0) ) { 
	    //check to see if this node already has a license
	    $result = db_query("SELECT * FROM {creativecommons_lite} WHERE nid = %d",  $node->nid);
	    $license = db_fetch_object($result);

	    if (!is_numeric($license->id)) {  
		  return creativecommons_lite_nodeapi($node, 'insert', $arg, $a4);
	    }
	    // update node license 
	    $result = db_query("UPDATE {creativecommons_lite} set data='%s' where nid=%d ", $node->cc_lite_license, $node->nid);
	  }
      break;

    case 'delete':
	  if( variable_get("creativecommons_lite_$node->type", 0) ) {  
	     db_query("delete from {creativecommons_lite} where nid=%d", $node->nid);
	  }
      break;

    case 'rss item':
      break;
      
  }
 return $output;  
}

function get_license_info( $license ) {
	
  $license_info = array(); 
  $img_path = base_path().CC_LITE_PATH.'/images';
 
  $images = array();
  
  switch( $license) {  
    case 'publicdomain':
	  $license_info['license_name'] = 'Public Domain License';
	  $license_info['license_uri'] = 'http://creativecommons.org/licenses/publicdomain/';
	  $images[] = $img_path . '/40publicdomain.gif';
	  
	break;
	case 'ccdevnations': 
	  $license_info['license_name'] = 'Developing Nations License';
	  $license_info['license_uri'] = 'http://creativecommons.org/licenses/devnations/2.0/';
	  $images[] = $img_path . '/40devnations.gif';
	  
	break;
	case 'by-nc-nd':
	  $license_info['license_name'] = 'Attribution Non-commercial No Derivatives';
	  $license_info['license_uri'] = 'http://creativecommons.org/licenses/by-nc-nd/3.0/';
	  $images[] = $img_path . '/icon.png';
	  $images[] = $img_path . '/icon-noncommercial.png';
	  $images[] = $img_path . '/icon-derivative.png';
	  
	break;
	case 'by-nc-sa':
	  $license_info['license_name'] = 'Attribution Non-commercial Share Alike';
	  $license_info['license_uri'] = 'http://creativecommons.org/licenses/by-nc-sa/3.0/';
	  $images[] = $img_path . '/icon.png';
	  $images[] = $img_path . '/icon-noncommercial.png';
	  $images[] = $img_path . '/icon-sharealike.png';
	  
	break;	
	case 'by-nc':
	  $license_info['license_name'] =  'Attribution Non-commercial';
	  $license_info['license_uri'] = 'http://creativecommons.org/licenses/by-nc/3.0/';
	  $images[] = $img_path . '/icon.png';
	  $images[] = $img_path . '/icon-noncommercial.png';
	  
	break;
	case 'by-nd':
	  $license_info['license_name'] = 'Attribution No Derivatives';
	  $license_info['license_uri'] = 'http://creativecommons.org/licenses/by-nd/3.0/';
	  $images[] = $img_path . '/icon.png';
	  $images[] = $img_path . '/icon-derivative.png';
	  
	break;
	case 'by-sa':
	  $license_info['license_name'] = 'Attribution Share Alike ';
	  $license_info['license_uri'] = 'http://creativecommons.org/licenses/by-sa/3.0/';
	  $images[] = $img_path . '/icon.png';
	  $images[] = $img_path . '/icon-sharealike.png';
	  
	break;
	case 'by':
	  $license_info['license_name'] = 'Attribution';
	  $license_info['license_uri'] = 'http://creativecommons.org/licenses/by/3.0/';
	  $images[] = $img_path . '/icon.png';
	  
	break;
     
   }

   foreach($images as $k => $img_uri) {
     $images[$k] = '<img alt="Creative Commons License" border="0" src="'.$img_uri.'" />';
   }
			
   $license_info['images'] = $images;
  
  return $license_info; 
}

//eof 