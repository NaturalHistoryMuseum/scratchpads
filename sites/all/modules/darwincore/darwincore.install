<?php

/**
 * This file installs the DwC specimen module.
 */
/**
 * Implementation of hook_install
 */
function darwincore_install(){
  
  // Install the taxonomies:
  $vocabularies = array(
    array(
      array('name' => 'Basis of record','description' => 'A descriptive term indicating whether the record represents an object or observation.','hierarchy' => 1,'module' => 'darwincore', 'nodes'=> array('darwincore'=>1)),
      array(
        array('name' => 'Preserved Specimen','description' => 'A physical object representing one or more organisms, part of organism, or artifact of an organism. synonyms: voucher, collection, lot.'),
        array('name' => 'Fossil Specimen','description' => 'A physical object representing one or more fossil organisms, part of fossil organism, or artifact of a fossil organism.'),
        array('name' => 'Living Specimen','description' => 'An organism removed from its natural occurrence and now living in captivity or cultivation.'),
        array('name' => 'Human Observation','description' => 'A report by a known observer that an organism was present at the place and time.'),
        array('name' => 'Machine Observation','description' => 'A report by a monitoring device that an organism was present at the place and time.'),
        array('name' => 'Still Image','description' => 'An photograph, drawing, painting.'),
        array('name' => 'Moving Image','description' => 'A sequence of still images taken at regular intervals and intended to be played back as a moving image; may include sound.'),
        array('name' => 'Sound Recording','description' => 'An audio recording.'),
        array('name' => 'Other Specimen','description' => 'Any type of specimen not covered by any of the categories above.')
      )
    ),
    array(
      array('name' => 'Sex','hierarchy' => 1,'module' => 'darwincore', 'nodes'=> array('darwincore'=>1)),
      array(
        array('name' => 'Male'),
        array('name' => 'Female'),
        array('name' => 'Hermaphrodite'),
        array('name' => 'Unknown'),
        array('name' => 'Indeterminate'),
        array('name' => 'Transitional'),
        array('name' => 'Undetermined'),
        array('name' => 'Multiple')
      )
    ),
    array(
      array('name' => 'Type Status','hierarchy' => 1,'module' => 'darwincore', 'nodes'=> array('darwincore'=>1)),
      array(
        array('name' => 'Holotype'),
        array('name' => 'Isotype'),
        array('name' => 'Lectotype'),
        array('name' => 'Neotype'),
        array('name' => 'Nontype'),
        array('name' => 'Not Provided'),
        array('name' => 'Paralectotype'),
        array('name' => 'Paratype'),
        array('name' => 'Syntype')
      )
    ),
    array(
      array('name' => 'Continent/BodyOfWater','description' => 'The full, unabbreviated name of the continent or body of water from which the organism was collected or observed.','hierarchy' => 1,'module' => 'darwincorelocation', 'nodes'=> array('darwincorelocation'=>1)),
      array(
        array('name' => 'Continent','description' => 'The full, unabbreviated name of the continent from which the organism was collected or observed.', 'children' => array(
            array('name' => 'Africa'),
            array('name' => 'Asia-Temperate'),
            array('name' => 'Asia-Tropical'),
            array('name' => 'Australasia'),
            array('name' => 'Pacific'),
            array('name' => 'Northern America'),
            array('name' => 'Southern America'),
            array('name' => 'Antarctic'),
            array('name' => 'Europe')
          )
        ),
        array('name' => 'BodyOfWater','description' => 'The full, unabbreviated name of the body of water from which the organism was collected or observed.', 'children' => array(
            array('name' => 'Atlantic Ocean'),
            array('name' => 'Indian Ocean'),
            array('name' => 'Southwestern Pacific'),
            array('name' => 'South-Central Pacific'),
            array('name' => 'Northwestern Pacific'),
            array('name' => 'North-Central Pacific')
          )
        )
      )
    )    
  );
  foreach ($vocabularies as $vocabulary){
    taxonomy_save_vocabulary($vocabulary[0]);
    $vid = $vocabulary[0]['vid'];
    foreach($vocabulary[1] as $term){
      $term['vid'] = $vid;
      $children = $term['children'];
      taxonomy_save_term($term);
      $parent=array($term['tid']);
      if (isset($children)){
        foreach($children as $term){
          $term['parent'] = $parent;
          $term['vid'] = $vid;
          taxonomy_save_term($term);
        }
      }
    }
  }
  // Create the database for specimen data
  // Create tables.
  drupal_install_schema('darwincore');
  // Increase the module's weight so that it is executed after location and after taxonomy (Don't fuck up).
  db_query("UPDATE {system} SET weight = 11 WHERE name = 'darwincore'");
}

function darwincore_schema(){
  $schema['darwincore'] = array(
    'fields' => array(
      'nid' => array('type' => 'int', 'length' => 10, 'not null' => true),
      'vid' => array('type' => 'int', 'length' => 10, 'not null' => true),
      'sex' => array('type' => 'int', 'length' => 10),
      'basisofrecord' => array('type' => 'int', 'length' => 10),
      'typestatus' => array('type' => 'int', 'length' => 10),
      'taxonomicname' => array('type' => 'int', 'length' => 10),
      'institutioncode' => array('type' => 'varchar', 'length' => 255),
      'collectioncode' => array('type' => 'varchar', 'length' => 255),
      'cataloguenumbertext' => array('type' => 'text'),
      'identificationqualifier' => array('type' => 'text'),
      'identifiedby' => array('type' => 'varchar', 'length' => 255),
      'dateidentified' => array('type' => 'datetime'),
      'collectornumber' => array('type' => 'varchar', 'length' => 255),
      'fieldnumber' => array('type' => 'varchar', 'length' => 255),
      'collector' => array('type' => 'varchar', 'length' => 255),
      'earliestdatecollected' => array('type' => 'datetime'),
      'latestdatecollected' => array('type' => 'datetime'),
      'fieldnotes' => array('type' => 'text', 'size' => 'big'),
      'othercataloguenum' => array('type' => 'text', 'size' => 'big'),
      'lifestage' => array('type' => 'varchar', 'length' => 255),
      'count' => array('type' => 'int', 'length' => 5),
      'genbanknum' => array('type' => 'varchar', 'length' => 255),
      'remarks' => array('type' => 'text', 'size' => 'big'),
      'locationnode' => array('type' => 'int', 'length' => 10)
    ),
    'primary key' => array('vid')
  );
  $schema['darwincorelocation'] = array(
    'fields' => array(
      'nid' => array('type' => 'int', 'length' => 10, 'not null' => true),
      'vid' => array('type' => 'int', 'length' => 10, 'not null' => true),
      'continentocean' => array('type' => 'int', 'length' => 10),
      'islandgroup' => array('type' => 'varchar', 'length' => 255),
      'island' => array('type' => 'varchar', 'length' => 255),
      'stateprovince' => array('type' => 'varchar', 'length' => 255),
      'county' => array('type' => 'varchar', 'length' => 255),
      'locality' => array('type' => 'varchar', 'length' => 255),
      'geodeticdatum' => array('type' => 'varchar', 'length' => 255),
      'verbatimcoordinatesystem' => array('type' => 'varchar', 'length' => 255),
      'georeferenceprotocol' => array('type' => 'varchar', 'length' => 255),
      'coordinateuncertainty' => array('type' => 'varchar', 'length' => 255),
      'georeferenceremarks' => array('type' => 'varchar', 'length' => 255),
      'minelevation' => array('type' => 'int', 'length' => 5),
      'maxelevation' => array('type' => 'int', 'length' => 5),
      'mindepth' => array('type' => 'int', 'length' => 5),
      'maxdepth' => array('type' => 'int', 'length' => 5)
    ),
    'primary key' => array('vid')
  );
  variable_set('location_settings_node_darwincorelocation', array(
      'multiple' => array('min'=>0,'max'=>1,'add'=>1),
      'form' => array(
        'weight' => 0,
        'collapsible' => 1,
        'collapsed' => 0,
        'fields' => array(
          'name' => array('collect'=>1,'weight'=>2),
          'street' => array('collect'=>1,'weight'=>4),
          'additional' => array('collect'=>1, 'weight'=>6),
          'country' => array('collect'=>1,'weight'=>8)
        ),
        'register' => 1
      ),
      'display' => array(
        'weight' => 0
      )
    )
  );
  variable_set('location_maxnum_darwincorelocation',1);
  variable_set('location_defaultnum_darwincorelocation',1);
  return $schema;
}

function darwincore_uninstall(){
  // Remove tables.
  drupal_uninstall_schema('darwincore');

  // Remove the tables and various settings.
  $vocabularies = taxonomy_get_vocabularies();
  foreach($vocabularies as $vocabulary){
    if ($vocabulary->module == 'darwincore' || $vocabulary->module == 'darwincorelocation'){
      $terms = taxonomy_get_tree($vocabulary->vid);
      foreach ($terms as $term){
        taxonomy_del_term($term->tid);      
      }
      taxonomy_del_vocabulary($vocabulary->vid);
    }
  }
  node_type_delete('darwincore');
}

function darwincore_update_6102(){
  // Try and load the file
  require_once("profiles/scratchpad/scratchpad.profile");
  if(function_exists("scratchpad_profile_set_perms")){
    scratchpad_profile_set_perms();
  }
  return array('#finished' => TRUE);
}


function darwincore_update_6103(){
  variable_set('location_settings_node_darwincorelocation', array(
      'multiple' => array('min'=>0,'max'=>1,'add'=>1),
      'form' => array(
        'weight' => 0,
        'collapsible' => 1,
        'collapsed' => 0,
        'fields' => array(
          'name' => array('collect'=>0,'weight'=>2),
          'street' => array('collect'=>0,'weight'=>4),
          'additional' => array('collect'=>0, 'weight'=>6),
          'country' => array('collect'=>1,'weight'=>8)
        ),
        'register' => 1
      ),
      'display' => array(
        'weight' => 0
      )
    )
  );
}

function darwincore_update_6104(){
  // This update should have been update 6100, but given that we have already
  // run the above two updates, it'll need to be here.
  // If the column "location" exists in the darwincore table, then rename it to
  // "locationnode".
  db_query("ALTER TABLE {darwincore} CHANGE location locationnode INT(10)");
  // This is either going to fail and we can ignore it, or work, so always
  // return success.
  return array('#finished' => TRUE);
}