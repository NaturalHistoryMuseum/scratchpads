<?php

function panels_vocab_menu(){
	
/* TODO
   Non menu code that was placed in hook_menu under the '!$may_cache' block
   so that it could be run during initialization, should now be moved to hook_init.
   Previously we called hook_init twice, once early in the bootstrap process, second
   just after the bootstrap has finished. The first instance is now called boot
   instead of init.
   
   In Drupal 6, there are now two hooks that can be used by modules to execute code
   at the beginning of a page request. hook_boot() replaces hook_boot() in Drupal 5
   and runs on each page request, even for cached pages. hook_boot() now only runs
   for non-cached pages and thus can be used for code that was previously placed in
   hook_menu() with $may_cache = FALSE:
   
   Dynamic menu items under a '!$may_cache' block can often be simplified
   to remove references to arg(n) and use of '%<function-name>' to check
   conditions. See http://drupal.org/node/103114.
   
   The title and description arguments should not have strings wrapped in t(),
   because translation of these happen in a later stage in the menu system.
*/
	if ($may_cache) {

		$items['admin/settings/panels_vocab'] = array(
	      'title' => 'Panels Vocabulary',
	      'page callback' => 'drupal_get_form',
			  'page arguments' => array('panels_vocab_admin_form'),
	      'access arguments' => array('Administer panels vocabulary'),
	      'description' => 'Configuration of panels vocabulary.',
	      'type' => MENU_NORMAL_ITEM,
	    );
	
	}
	
	return $items;
	
}	

function panels_vocab_perm(){
	return array('Administer panels vocabulary');
}

function panels_vocab_admin_form(){
	
	$panels = panels_page_load_all();
	
	if(is_array($panels)){
		
		$panel_options = array();

		foreach($panels as $panel){

			$panel_options[$panel->pid] = $panel->name; 

		}
		
		
		$form['panels_vocab_auto'] = array(
		  '#type' => 'select',
			'#multiple' => true,
			'#size' => count($panel_options),
		  '#title' => t('Automatically add new vocabularies'),
		  '#default_value' => variable_get('panels_vocab_auto', array()),
		  '#options' => $panel_options,
			'#description' => t("New vocabularies will be automatically added to the selected panels pages"),
		);
		
		$form['panels_vocab_form'] = array(
		  '#type' => 'select',
			'#multiple' => true,
			'#size' => count($panel_options),
		  '#title' => t('Provide form option'),
		  '#default_value' => variable_get('panels_vocab_form', array()),
		  '#options' => $panel_options,
			'#description' => t("Provide the option of adding vocabulary to the selected panels pages when adding & editing vocabularies."),
		);
		
	}else{
		
		$form['#prefix'] = t("Sorry, you need to have some panel pages to configure this module.");
		
	}
	
	return system_settings_form($form);
	
}

function panels_vocab_taxonomy($op, $type, $array = NULL){
	
	if($type == 'vocabulary'){

		switch($op){

			case 'update':
			case 'insert':

				$auto_add = variable_get('panels_vocab_auto', array());

				if(is_array($auto_add) && is_array($array['panels_auto_add'])){
					
					$vocab_to_add = $auto_add + $array['panels_auto_add'];
					
				}elseif(is_array($array['panels_auto_add'])){
					
					$vocab_to_add =  $array['panels_auto_add'];
					
				}elseif(is_array($auto_add)){
					
					$vocab_to_add = $auto_add;
					
				}	

				if(is_array($vocab_to_add)){

					foreach($vocab_to_add as $pid => $selected){

						$panels_page = panels_page_load($pid);

							foreach($panels_page->arguments as $key => $argument){

								if($argument['argument_settings']['vids']){

									if($selected){ // add this to the panel
									$panels_page->arguments[$key]['argument_settings']['vids'][$array['vid']] = $array['vid'];
									}else{
									$panels_page->arguments[$key]['argument_settings']['vids'][$array['vid']] = 0;	
									}

								}

							}

						panels_page_save($panels_page);

					}

				}
				
				

			break;

			}
		
	}
	

}

function panels_vocab_form_alter(&$form, &$form_state, $form_id){
	
	switch($form_id){
		
		case 'taxonomy_form_vocabulary':
		
		$admin_settings = variable_get('panels_vocab_form', array());
		
			if(count($admin_settings)){
				
				$panels = panels_page_load_all();
				
				if(is_array($panels)){

					foreach($panels as $panel){

						if($admin_settings[$panel->pid]){
						$panel_options[$panel->pid] = $panel->name; 	
						}	
						
						// if editing, get default settings for panels 
						if($form['vid']['#value']){
						
							foreach($panel->arguments as $argument){
								
								if($argument['argument_settings']['vids'][$form['vid']['#value']]){
									
									$default_options[] = $panel->pid;
									
								}
							
							}
							
						}

					}

						if(count($panel_options)){

							$form['panels_auto_add'] = array(
							  '#type' => 'checkboxes',
							  '#title' => t('Use this vocabulary in the following panels'),
							  '#options' => $panel_options,
								'#default_value' => $default_options,
								'#description' => t("This vocabulary will be used in the arguments of the selected panels page."),
							);
							
						}

				}

				
			}
		
		break;
		
		
	}
	
}



