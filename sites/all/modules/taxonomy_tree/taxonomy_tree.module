<?php

/** 
* Implementation of hook_init().
* Define a callback path
*/
function taxonomy_tree_init(){
  
  drupal_add_js(array('taxonomyTreeCallbackPath' => url('taxonomy_tree/callback')), 'setting');
	
}

/** 
*Implementation of hook_perm(). 
*/
function taxonomy_tree_perm(){

  return array('administer taxonomy tree');

}

/** 
*Implementation of hook_menu(). 
*/
function taxonomy_tree_menu(){
  
  $items['admin/settings/taxonomy_tree'] = array(
    'title' => 'Taxonomy tree',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('taxonomy_tree_admin_settings_form'),
    'type' => MENU_NORMAL_ITEM,
    'access arguments' => array('administer taxonomy tree'),
    'file' => 'taxonomy_tree.admin.inc',
  );
  
  $items['taxonomy_tree/callback'] = array(
    'title' => 'Add project',
    'page callback' => 'taxonomy_tree_callback',
    'access arguments' => array('administer taxonomy tree'),
    'type' => MENU_CALLBACK,
    'file' => 'taxonomy_tree.callbacks.inc',
  );

  return $items;
  
}


function taxonomy_tree_add_files(){
   
   $path = drupal_get_path('module', 'taxonomy_tree');

   drupal_add_js($path.'/js/plugins/jquery.cookie.js');
   drupal_add_js($path.'/js/plugins/jquery.treeview.js');
   drupal_add_js($path.'/js/plugins/jquery.treeview.async.js');
   drupal_add_js($path.'/js/taxonomy_tree.js');
   drupal_add_css($path.'/css/taxonomy_tree.css');
        
}


/** 
*Implementation of hook_alter(). 
*/
function taxonomy_tree_form_alter(&$form, $form_state, $form_id) {
  
  if (isset($form['type']) && isset($form['#node'])) {
  
    if(count($form['taxonomy'])){
      
    $vocabularies = taxonomy_get_vocabularies($form['#node']->type);
    
      foreach($vocabularies as $vid => $vocabulary){
   
        $taxonomy_tree_node_types = variable_get('taxonomy_tree_'.$vid, array());
      
        if($taxonomy_tree_node_types[$form['type']['#value']]){
      
        // $form['taxonomy'][$vid] = array('#value' => '<div class="form-item">
        //    <div><label>Terms for New Pediculus</label><div class="taxonomy-tree"><ul class="treeview">
        //    <li>1</li>
        //    <li>2</li>
        //    <li>3</li>
        //    <li>4</li>
        //    <li>5</li>
        //    <li>6</li>
        //    <li>7</li>
        //    </ul>
        //   </div></div></div>');
        //   
        //   
        // $form['taxonomy'][$vid] = array('#value' => '<div class="form-item">
        //    <div><label>Terms for New Pediculus</label><div class="taxonomy-tree">
        //    
        //      <ul class="treeview" id="edit-taxonomy-6"><li class="open collapsable lastCollapsable" id="110"><div class="hitarea open-hitarea collapsable-hitarea lastCollapsable-hitarea"></div><span class=""><div class="form-item">
        //       <label class="option" for=""><input name="taxonomy[6][110]" id="" value="110" checked="checked" class="form-checkbox" type="checkbox"> Pediculus</label>
        //      </div>
        //      <input name="expanded[112]" id="" value="112" type="hidden">
        //      <input name="expanded[110]" id="" value="110" type="hidden">
        //      <input name="expanded[117]" id="" value="117" type="hidden">
        //      </span><ul><li id="111"><span><div class="form-item">
        //       <label class="option" for=""><input name="taxonomy[6][111]" id="" value="111" class="form-checkbox" type="checkbox"> Pediculus clavicornis Nitzsch, 1864</label>
        // 
        //      </div>
        //      </span></li><li class="open collapsable" id="112"><div class="hitarea open-hitarea collapsable-hitarea"></div><span class=""><div class="form-item">
        //       <label class="option" for=""><input name="taxonomy[6][112]" id="" value="112" class="form-checkbox" type="checkbox"> Pediculus humanus Linnaeus, 1758</label>
        //      </div>
        //      </span><ul><li id="113"><span><div class="form-item">
        //       <label class="option" for=""><input name="taxonomy[6][113]" id="" value="113" checked="checked" class="form-checkbox" type="checkbox"> Body louse</label>
        //      </div>
        //      </span></li><li id="114"><span><div class="form-item">
        //       <label class="option" for=""><input name="taxonomy[6][114]" id="" value="114" checked="checked" class="form-checkbox" type="checkbox"> Head louse</label>
        // 
        //      </div>
        //      </span></li><li id="115"><span><div class="form-item">
        //       <label class="option" for=""><input name="taxonomy[6][115]" id="" value="115" checked="checked" class="form-checkbox" type="checkbox"> Pediculus humanus capitis De Geer, 1778</label>
        //      </div>
        //      </span></li><li class="last" id="116"><span><div class="form-item">
        //       <label class="option" for=""><input name="taxonomy[6][116]" id="" value="116" checked="checked" class="form-checkbox" type="checkbox"> Pediculus humanus humanus Linnaeus, 1758</label>
        //      </div>
        //      </span></li></ul></li><li class="open collapsable" id="117"><div class="hitarea open-hitarea collapsable-hitarea"></div><span class=""><div class="form-item">
        //       <label class="option" for=""><input name="taxonomy[6][117]" id="" value="117" checked="checked" class="form-checkbox" type="checkbox"> Pediculus mjobergi Ferris, 1916</label>
        // 
        //      </div>
        //      </span><ul><li class="last" id="118"><span><div class="form-item">
        //       <label class="option" for=""><input name="taxonomy[6][118]" id="" value="118" checked="checked" class="form-checkbox" type="checkbox"> Pediculus mj√∑bergi Ferris, 1916</label>
        //      </div>
        //      </span></li></ul></li><li class="last" id="119"><span><div class="form-item">
        //       <label class="option" for=""><input name="taxonomy[6][119]" id="" value="119" checked="checked" class="form-checkbox" type="checkbox"> Pediculus schaeffi Fahrenholz, 1910</label>
        //      </div>
        //      </span></li></ul></li></ul>
        //    
        //   </div></div></div>');  
      
        $form['taxonomy'][$vid]['#process'] = array('taxonomy_tree_process_field');
                 
                 $form['taxonomy_tree'][$vid] = array('#type' => 'hidden', '#value' => $vid, '#parents' => array('taxonomy_tree', $vid));
            

           
        }
      
      }
      
      if(count($form['taxonomy_tree'])){
      
        if(is_array($form['#submit'])){
        
          $form['#submit'] = array('taxonomy_tree_node_form_submit') + $form['#submit'];
        
        }else{
        
          $form['#submit'] = array('taxonomy_tree_node_form_submit');
        
        }
      
      }
      
    
    }
  
  
  }

  
}


function taxonomy_tree_node_form_submit($form, &$form_state) {
 
 $taxa_vid = $form_state['values']['taxa_vid'];
 
 foreach($form_state['values']['taxonomy_tree'] as $vid){
   
   if(count($form_state['values']['taxonomy'][$vid])){
     
     foreach($form_state['values']['taxonomy'][$vid] as $tid){

       if(!$form['#post']['expanded'][$tid]){
       // This term has not been expanded, so we need to see if it has any children to automatically select
       
       taxonomy_tree_select_children($form_state, $vid, $tid);
       
       }
       
     }
     
   }
   
 }


}

/** 
* Select all children of a term;
* Recursive;
*/
function taxonomy_tree_select_children(&$form_state, $vid, $tid){
  
  $children = taxonomy_get_children($tid);

  if(count($children)){

    foreach($children as $child){

      $form_state['values']['taxonomy'][$vid][$child->tid] = $child->tid;
      
      taxonomy_tree_select_children($form_state, $vid, $child->tid);

    }

  }

  
}


/** 
* Process the field
*/
function taxonomy_tree_process_field($element){
  
  $element['#type'] = 'markup';
  $element['#theme'] = 'taxonomy_tree_element';
  
  // Remove options as otherwise illegal choise will be detected
  unset($element['#options']);
  
  return $element;
  
  
}


/** 
* Implementation of hook_theme(). 
*/ 
function taxonomy_tree_theme() { 
  
  return array(
    
    'taxonomy_tree_element' => array(
      'arguments' => array('element' => NULL)
    ),
    
  );

}


/** 
* Theme the tree form element
*/
function theme_taxonomy_tree_element($element){

  taxonomy_tree_add_files();

  $vid = $element['#array_parents'][1];

  foreach($element['#value'] as $value){
    
    $selected .= '&t['.$value.']='.$value;
    
  }
  
  $js = '$(document).ready(function() {
          TREE = new treeview(); 
          TREE.init("'.$element['#id'].'","'.$vid.'","'.$selected.'", "'.$element['#no_tree'].'")
        })';
  
  drupal_add_js($js, 'inline');
  
  $output = '<div '.drupal_attributes($element['#attributes']).'>';
  $output .= '<label>Terms for '.$element['#title'].'</label>';
  $output .= '<div class="taxonomy-tree"><ul id="'.$element['#id'].'"></ul></div>';
  $output .= '</div>';
  
  return $output;
  
}





