<?php

/** 
* Implementation of hook_init().
* Define a callback path
*/
function taxonomy_tree_init(){
  
  taxonomy_tree_add_files();
  
  drupal_add_js(array('taxonomyTreeCallbackPath' => url('taxonomy_tree/callback')), 'setting');
	
}

/** 
*Implementation of hook_perm(). 
*/
function taxonomy_tree_perm(){

  return array('administer taxonomy tree');

}

/** 
*Implementation of hook_menu(). 
*/
function taxonomy_tree_menu(){
  
  $items['admin/settings/taxonomy_tree'] = array(
    'title' => 'Taxonomy tree',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('taxonomy_tree_admin_settings_form'),
    'type' => MENU_NORMAL_ITEM,
    'access arguments' => array('administer taxonomy tree'),
    'file' => 'taxonomy_tree.admin.inc',
    'description' => t('Configure which taxonomy form elements display as expandable trees.')
  );
  
  $items['taxonomy_tree/callback'] = array(
    'title' => 'Add project',
    'page callback' => 'taxonomy_tree_callback',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
    'file' => 'taxonomy_tree.callbacks.inc',
  );

  return $items;
  
}


function taxonomy_tree_add_files(){
   
   $path = drupal_get_path('module', 'taxonomy_tree');

   drupal_add_js($path.'/js/plugins/jquery.cookie.js');
   drupal_add_js($path.'/js/plugins/jquery.treeview.js');
   drupal_add_js($path.'/js/plugins/jquery.treeview.async.js');
   drupal_add_js($path.'/js/taxonomy_tree.js');
   drupal_add_css($path.'/css/taxonomy_tree.css');
        
}


function taxonomy_tree_add_trees_to_form(&$form, &$form_state, $taxonomy_tree_vocabularies_var = null){
  
  foreach(element_children($form['taxonomy']) as $vid){

    if(!$taxonomy_tree_vocabularies_var || $taxonomy_tree_vocabularies_var[$vid]){
    
    $taxonomy_tree = true;
    
    $form['taxonomy'][$vid]['#process'] = array('taxonomy_tree_process_field');
    
    $form['taxonomy'][$vid]['taxonomy_tree_nid'] = array(
      '#type' => 'hidden', 
      '#value' => $form['#node']->nid,
      '#parents' => array('taxonomy_tree_nid', $vid)
    );
    
    $form['taxonomy'][$vid]['taxonomy_tree_vid'] = array(
      '#type' => 'hidden', 
      '#value' => $vid,
      '#parents' => array('taxonomy_tree_vid', $vid)
    );

            
    $form['taxonomy'][$vid]['taxonomy_tree_selected'] = array(
       '#type' => 'hidden', 
       '#value' => '',
       '#parents' => array('taxonomy_tree_selected', $vid)
     );
       
       // If form fails validation, we need to know what tids have been selected
       ($form_state['post']['taxonomy'][$vid] ? $selected_tids = $form_state['post']['taxonomy'][$vid] : $selected_tids = $form['taxonomy'][$vid]['#default_value']);
       
       if(count($selected_tids)){
        
         $conj = '';
        
         foreach($selected_tids as $selected_tid){
       
            $form['taxonomy'][$vid]['taxonomy_tree_selected']['#value'] .= $conj.$selected_tid;
            $conj = '-';
       
         }
         
       }
     
    }
    
  }
  
  return $taxonomy_tree;
  
}


/** 
*Implementation of hook_alter(). 
*/
function taxonomy_tree_form_alter(&$form, $form_state, $form_id) {  
  
  if (isset($form['type']) && isset($form['#node'])) {
  
    if(count($form['taxonomy'])){
      
    $taxonomy_tree_node_types_var = variable_get('taxonomy_tree_node_types', array());  
    
      if($taxonomy_tree_node_types_var[$form['#node']->type]){
      
        $taxonomy_tree = taxonomy_tree_add_trees_to_form($form, $form_state);
      
      }else{
      
      $taxonomy_tree_vocabularies_var = variable_get('taxonomy_tree_vocabularies', array());
      
          if(count($taxonomy_tree_vocabularies_var)){
            
            $taxonomy_tree = taxonomy_tree_add_trees_to_form($form, $form_state, $taxonomy_tree_vocabularies_var);
            
          }
      
      }

      if($taxonomy_tree){
      
        if(is_array($form['#submit'])){
        
          $form['#submit'] = array('taxonomy_tree_node_form_submit') + $form['#submit'];
          
        
        }else{
        
          $form['#submit'] = array('taxonomy_tree_node_form_submit');
        
        }
      
      }
      
    
    }
  
  
  }
  
}


/** 
* Automatically populate the taxonomy array with expanded values
*/
function taxonomy_tree_node_form_submit($form, &$form_state) {

 if(isset($form_state['taxonomy_tree_override'])){
   
   return;
   
 }

 if(count($form_state['values']['taxonomy_tree_vid'])){
 
   foreach($form_state['values']['taxonomy_tree_vid'] as $vid){
 
     if(count($form_state['values']['taxonomy'][$vid])){
 
       foreach($form_state['values']['taxonomy'][$vid] as $tid){
 
         if(!$form['#post']['expanded'][$tid]){
         // This term has not been expanded, so we need to see if it has any children to automatically select
 
         taxonomy_tree_select_children($form_state, $vid, $tid);
 
         }
 
       }
 
     }
 
   }
   
 }
 
}

/** 
* Select all children of a term;
* Recursive;
*/
function taxonomy_tree_select_children(&$form_state, $vid, $tid){
  
  $children = taxonomy_get_children($tid);

  if(count($children)){
  
    foreach($children as $child){
  
      $form_state['values']['taxonomy'][$vid][$child->tid] = $child->tid;
      
      taxonomy_tree_select_children($form_state, $vid, $child->tid);
  
    }
  
  }

  
}


/** 
* Process the field
*/
function taxonomy_tree_process_field($element){

  $element['#type'] = 'markup';
  $element['#theme'] = 'taxonomy_tree_element';
  
  // Remove options as otherwise illegal choise will be detected
  unset($element['#options']);
  
  return $element;
  
  
}


/** 
* Implementation of hook_theme(). 
*/ 
function taxonomy_tree_theme() { 
  
  return array(
    
    'taxonomy_tree_element' => array(
      'arguments' => array('element' => NULL)
    ), 
    
  );

}




/** 
* Theme the tree form element
*/
function theme_taxonomy_tree_element($element){

 $vid = $element['#array_parents'][1];

 $element['#attributes']['class'] = 'taxonomy-tree-field';

  $output = '<div '.drupal_attributes($element['#attributes']).'>';
  $output .= '<label>Terms for '.$element['#title'].'</label>';
  $output .= '<div class="taxonomy-tree"><ul id="'.$vid.'"></ul></div>';
  $output .= drupal_render($element['taxonomy_tree_nid']);
  $output .= drupal_render($element['taxonomy_tree_vid']);
  $output .= drupal_render($element['taxonomy_tree_selected']);
  $output .= '</div>';
  
  return $output;
  
}





