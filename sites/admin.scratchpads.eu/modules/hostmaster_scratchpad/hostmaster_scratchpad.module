<?php
/**
 * Define an array of Scratchpad profile node IDs
 */
define('ADMIN_RID', 4);
// Platforms
define('SCRATCHPAD_PLATFORM', 5);
define('SCRATCHPAD_2_PLATFORM', 3914);
// Profiles
define('SCRATCHPAD_PROFILE_NID', 691);
define('EMONOCOT_PROFILE_NID', 1754);
define('SCRATCHPAD_2_PROFILE_NID', 3054);
define('SCRATCHPAD_2_TRAINING_PROFILE_NID', 3475);
define('EMONOCOT_2_PROFILE_NID', 3129);

function hostmaster_scratchpad_menu(){
  return array(
    'hosting-signup-restricted' => array(
      'title' => t('Signup temporarily restricted'),
      'page callback' => 'hostmaster_scratchpad_signup_restricted',
      'access arguments' => array(
        'access hosting signup form'
      )
    )
  );
}

function hostmaster_scratchpad_signup_restricted(){
  return '<div class="message error"><h1>Signup for a Scratchpad has temporarily been disabled.  Please come back later.</h1></div>';
}

/**
 * Implementation of hook_mail_alter().
 */
function hostmaster_scratchpad_mail_alter(&$message){
  // Set the from address for all emails from Aegir
  $message['from'] = 'Scratchpads Team <no-reply@scratchpads.eu>';
  // Prevent sending of the "your new site" message. Gah!
  if(substr($message['subject'], 0, 13) == 'Your new site'){
    $message['to'] = '<aegir>';
  }
}

/**
 * Implementation of hook_form_FORM_ID_alter
 */
function hostmaster_scratchpad_form_site_node_form_alter(&$form, $form_state){
  hostmaster_scratchpad_form_hosting_signup_form_alter($form, $form_state);
  $form['client']['#collapsed'] = TRUE;
  $form['client']['#collapsible'] = TRUE;
  $form['about_scratchpad']['#collapsed'] = TRUE;
  $form['about_scratchpad']['#collapsible'] = TRUE;
  $form['comments_fieldset']['#collapsed'] = TRUE;
  $form['comments_fieldset']['#collapsible'] = TRUE;
  unset($form['about_scratchpad']['title']);
}

/**
 * Implementation of hook_form_FORM_ID_alter
 */
function hostmaster_scratchpad_form_hosting_signup_form_alter(&$form, $form_state){
  // Check whether we have access to the normal create site page. If we do, we
  // should be there instead of here.
  if(user_access('create site') && arg(0) == 'hosting' && arg(1) == 'signup'){
    drupal_goto('node/add/site');
  }
  return hostmaster_scratchpad_form_hosting_signup_form_alter_alter($form, $form_state);
}

function hostmaster_scratchpad_validate_fail($form, &$form_state){
  form_set_error('', t('Editing disabled'));
}

/**
 * Helper for the above two form alter functions
 */
function hostmaster_scratchpad_form_hosting_signup_form_alter_alter(&$form, $form_state){
  global $user;
  if(isset($user->roles[ADMIN_RID])){
    // Add a warning that this can not be edited, and that new sites Scratchpads
    // should be created from the signup form.
    if(arg(1) == 'add'){
      // We're adding a site, warn that we shouldn't add Scratchpads from here.
      $form['warning'] = array(
        '#value' => '<div class="message warning" style="margin:5px 0;"><p style="padding:0;margin:0"><strong>' . t('Warning') . ':</strong> ' . t('Scratchpads should be created using the signup form ONLY') . '</p></div>',
        '#weight' => -1000
      );
      unset($form['profile']['#options'][SCRATCHPAD_PROFILE_NID]);
      unset($form['profile']['#options'][EMONOCOT_PROFILE_NID]);
    }
    return;
  }
  $form['#theme'] = 'hostmaster_scratchpad_application_form';
  if(!isset($user->roles[ADMIN_RID])){
    $form['client'] = array(
      '#type' => 'fieldset',
      '#title' => t('About you'),
      '#weight' => 4,
      '#collapsed' => FALSE,
      '#collapsible' => FALSE,
      'client_title' => array(
        '#title' => t('Title'),
        '#required' => isset($user->roles[ADMIN_RID]) ? FALSE : TRUE,
        '#type' => 'select',
        '#options' => array(
          'Mr' => 'Mr',
          'Mrs' => 'Mrs',
          'Miss' => 'Miss',
          'Ms' => 'Ms',
          'Dr' => 'Dr',
          'Prof.' => 'Prof',
          'Other' => 'Other'
        )
      ),
      'client_name' => array(
        '#title' => t('Full name'),
        '#description' => t('At minimum this should be your first given name and your family name'),
        '#type' => 'textfield',
        '#required' => isset($user->roles[ADMIN_RID]) ? FALSE : TRUE,
        '#default_value' => isset($form['#node']->client_name) ? $form['#node']->client_name : ''
      ),
      'email' => array(
        '#title' => t('Email'),
        '#description' => t('Your email address. This must be a valid email address, as your password will be sent to it'),
        '#type' => 'textfield',
        '#required' => isset($user->roles[ADMIN_RID]) ? FALSE : TRUE
      ),
      'email_confirm' => array(
        '#title' => 'Confirm Email',
        '#type' => 'textfield',
        '#required' => isset($user->roles[ADMIN_RID]) ? FALSE : TRUE
      ),
      'institution' => array(
        '#title' => t('Institution'),
        '#description' => t('The institution with which you are most closely associated. If retired or amateur, please insert "N/A"'),
        '#type' => 'textfield',
        '#required' => isset($user->roles[ADMIN_RID]) ? FALSE : TRUE
      ),
      'country' => array(
        '#title' => t('Country'),
        '#description' => t('The country that you are based in.'),
        '#type' => 'select',
        '#required' => isset($user->roles[ADMIN_RID]) ? FALSE : TRUE,
        '#options' => array(
          NULL => '-- Select --',
          'AF' => 'Afghanistan',
          'AX' => 'Aland Islands',
          'AL' => 'Albania',
          'DZ' => 'Algeria',
          'AS' => 'American Samoa',
          'AD' => 'Andorra',
          'AO' => 'Angola',
          'AI' => 'Anguilla',
          'AQ' => 'Antarctica',
          'AG' => 'Antigua and Barbuda',
          'AR' => 'Argentina',
          'AM' => 'Armenia',
          'AW' => 'Aruba',
          'AU' => 'Australia',
          'AT' => 'Austria',
          'AZ' => 'Azerbaijan',
          'BS' => 'Bahamas',
          'BH' => 'Bahrain',
          'BD' => 'Bangladesh',
          'BB' => 'Barbados',
          'BY' => 'Belarus',
          'BE' => 'Belgium',
          'BZ' => 'Belize',
          'BJ' => 'Benin',
          'BM' => 'Bermuda',
          'BT' => 'Bhutan',
          'BO' => 'Bolivia',
          'BQ' => 'Bonaire, Sint Eustatius and Saba',
          'BA' => 'Bosnia and Herzegovina',
          'BW' => 'Botswana',
          'BV' => 'Bouvet Island',
          'BR' => 'Brazil',
          'IO' => 'British Indian Ocean Territory',
          'VG' => 'British Virgin Islands',
          'BN' => 'Brunei',
          'BG' => 'Bulgaria',
          'BF' => 'Burkina Faso',
          'BI' => 'Burundi',
          'KH' => 'Cambodia',
          'CM' => 'Cameroon',
          'CA' => 'Canada',
          'CV' => 'Cape Verde',
          'KY' => 'Cayman Islands',
          'CF' => 'Central African Republic',
          'TD' => 'Chad',
          'CL' => 'Chile',
          'CN' => 'China',
          'CX' => 'Christmas Island',
          'CC' => 'Cocos (Keeling) Islands',
          'CO' => 'Colombia',
          'KM' => 'Comoros',
          'CG' => 'Congo (Brazzaville)',
          'CD' => 'Congo (Kinshasa)',
          'CK' => 'Cook Islands',
          'CR' => 'Costa Rica',
          'HR' => 'Croatia',
          'CU' => 'Cuba',
          'CW' => 'CuraÃ§ao',
          'CY' => 'Cyprus',
          'CZ' => 'Czech Republic',
          'DK' => 'Denmark',
          'DJ' => 'Djibouti',
          'DM' => 'Dominica',
          'DO' => 'Dominican Republic',
          'EC' => 'Ecuador',
          'EG' => 'Egypt',
          'SV' => 'El Salvador',
          'GQ' => 'Equatorial Guinea',
          'ER' => 'Eritrea',
          'EE' => 'Estonia',
          'ET' => 'Ethiopia',
          'FK' => 'Falkland Islands',
          'FO' => 'Faroe Islands',
          'FJ' => 'Fiji',
          'FI' => 'Finland',
          'FR' => 'France',
          'GF' => 'French Guiana',
          'PF' => 'French Polynesia',
          'TF' => 'French Southern Territories',
          'GA' => 'Gabon',
          'GM' => 'Gambia',
          'GE' => 'Georgia',
          'DE' => 'Germany',
          'GH' => 'Ghana',
          'GI' => 'Gibraltar',
          'GR' => 'Greece',
          'GL' => 'Greenland',
          'GD' => 'Grenada',
          'GP' => 'Guadeloupe',
          'GU' => 'Guam',
          'GT' => 'Guatemala',
          'GG' => 'Guernsey',
          'GN' => 'Guinea',
          'GW' => 'Guinea-Bissau',
          'GY' => 'Guyana',
          'HT' => 'Haiti',
          'HM' => 'Heard Island and McDonald Islands',
          'HN' => 'Honduras',
          'HK' => 'Hong Kong S.A.R., China',
          'HU' => 'Hungary',
          'IS' => 'Iceland',
          'IN' => 'India',
          'ID' => 'Indonesia',
          'IR' => 'Iran',
          'IQ' => 'Iraq',
          'IE' => 'Ireland',
          'IM' => 'Isle of Man',
          'IL' => 'Israel',
          'IT' => 'Italy',
          'CI' => 'Ivory Coast',
          'JM' => 'Jamaica',
          'JP' => 'Japan',
          'JE' => 'Jersey',
          'JO' => 'Jordan',
          'KZ' => 'Kazakhstan',
          'KE' => 'Kenya',
          'KI' => 'Kiribati',
          'KW' => 'Kuwait',
          'KG' => 'Kyrgyzstan',
          'LA' => 'Laos',
          'LV' => 'Latvia',
          'LB' => 'Lebanon',
          'LS' => 'Lesotho',
          'LR' => 'Liberia',
          'LY' => 'Libya',
          'LI' => 'Liechtenstein',
          'LT' => 'Lithuania',
          'LU' => 'Luxembourg',
          'MO' => 'Macao S.A.R., China',
          'MK' => 'Macedonia',
          'MG' => 'Madagascar',
          'MW' => 'Malawi',
          'MY' => 'Malaysia',
          'MV' => 'Maldives',
          'ML' => 'Mali',
          'MT' => 'Malta',
          'MH' => 'Marshall Islands',
          'MQ' => 'Martinique',
          'MR' => 'Mauritania',
          'MU' => 'Mauritius',
          'YT' => 'Mayotte',
          'MX' => 'Mexico',
          'FM' => 'Micronesia',
          'MD' => 'Moldova',
          'MC' => 'Monaco',
          'MN' => 'Mongolia',
          'ME' => 'Montenegro',
          'MS' => 'Montserrat',
          'MA' => 'Morocco',
          'MZ' => 'Mozambique',
          'MM' => 'Myanmar',
          'NA' => 'Namibia',
          'NR' => 'Nauru',
          'NP' => 'Nepal',
          'NL' => 'Netherlands',
          'AN' => 'Netherlands Antilles',
          'NC' => 'New Caledonia',
          'NZ' => 'New Zealand',
          'NI' => 'Nicaragua',
          'NE' => 'Niger',
          'NG' => 'Nigeria',
          'NU' => 'Niue',
          'NF' => 'Norfolk Island',
          'KP' => 'North Korea',
          'MP' => 'Northern Mariana Islands',
          'NO' => 'Norway',
          'OM' => 'Oman',
          'PK' => 'Pakistan',
          'PW' => 'Palau',
          'PS' => 'Palestinian Territory',
          'PA' => 'Panama',
          'PG' => 'Papua New Guinea',
          'PY' => 'Paraguay',
          'PE' => 'Peru',
          'PH' => 'Philippines',
          'PN' => 'Pitcairn',
          'PL' => 'Poland',
          'PT' => 'Portugal',
          'PR' => 'Puerto Rico',
          'QA' => 'Qatar',
          'RE' => 'Reunion',
          'RO' => 'Romania',
          'RU' => 'Russia',
          'RW' => 'Rwanda',
          'BL' => 'Saint BarthÃ©lemy',
          'SH' => 'Saint Helena',
          'KN' => 'Saint Kitts and Nevis',
          'LC' => 'Saint Lucia',
          'MF' => 'Saint Martin (French part)',
          'PM' => 'Saint Pierre and Miquelon',
          'VC' => 'Saint Vincent and the Grenadines',
          'WS' => 'Samoa',
          'SM' => 'San Marino',
          'ST' => 'Sao Tome and Principe',
          'SA' => 'Saudi Arabia',
          'SN' => 'Senegal',
          'RS' => 'Serbia',
          'SC' => 'Seychelles',
          'SL' => 'Sierra Leone',
          'SG' => 'Singapore',
          'SX' => 'Sint Maarten (Dutch part)',
          'SK' => 'Slovakia',
          'SI' => 'Slovenia',
          'SB' => 'Solomon Islands',
          'SO' => 'Somalia',
          'ZA' => 'South Africa',
          'GS' => 'South Georgia and the South Sandwich Islands',
          'KR' => 'South Korea',
          'SS' => 'South Sudan',
          'ES' => 'Spain',
          'LK' => 'Sri Lanka',
          'SD' => 'Sudan',
          'SR' => 'Suriname',
          'SJ' => 'Svalbard and Jan Mayen',
          'SZ' => 'Swaziland',
          'SE' => 'Sweden',
          'CH' => 'Switzerland',
          'SY' => 'Syria',
          'TW' => 'Taiwan',
          'TJ' => 'Tajikistan',
          'TZ' => 'Tanzania',
          'TH' => 'Thailand',
          'TL' => 'Timor-Leste',
          'TG' => 'Togo',
          'TK' => 'Tokelau',
          'TO' => 'Tonga',
          'TT' => 'Trinidad and Tobago',
          'TN' => 'Tunisia',
          'TR' => 'Turkey',
          'TM' => 'Turkmenistan',
          'TC' => 'Turks and Caicos Islands',
          'TV' => 'Tuvalu',
          'VI' => 'U.S. Virgin Islands',
          'UG' => 'Uganda',
          'UA' => 'Ukraine',
          'AE' => 'United Arab Emirates',
          'GB' => 'United Kingdom',
          'US' => 'United States',
          'UM' => 'United States Minor Outlying Islands',
          'UY' => 'Uruguay',
          'UZ' => 'Uzbekistan',
          'VU' => 'Vanuatu',
          'VA' => 'Vatican',
          'VE' => 'Venezuela',
          'VN' => 'Vietnam',
          'WF' => 'Wallis and Futuna',
          'EH' => 'Western Sahara',
          'YE' => 'Yemen',
          'ZM' => 'Zambia',
          'ZW' => 'Zimbabwe'
        )
      )
    );
  }
  $form['about_scratchpad'] = array(
    '#type' => 'fieldset',
    '#weight' => 4,
    '#title' => t('About your Scratchpad'),
    '#collapsed' => FALSE,
    '#collapsible' => FALSE,
    'site_title' => array(
      '#title' => t('Site title'),
      '#description' => t('The site title will appear in the header section of your Scratchpad by default but can be removed later.'),
      '#type' => 'textfield',
      '#required' => isset($user->roles[ADMIN_RID]) ? FALSE : TRUE
    ),
    'taxonomic_scope' => array(
      '#title' => t('Taxonomic scope'),
      '#description' => t('The taxonomic group which best describes what taxa will be featured on your site. e.g. Insecta, Aves, Phthiraptera, Dragons'),
      '#type' => 'textfield',
      '#required' => isset($user->roles[ADMIN_RID]) ? FALSE : TRUE
    ),
    'title' => array(
      '#title' => t('Website domain'),
      '#description' => '<h3>Your domain name should be:</h3><ul><li><em>Short</em>. You can choose up to 34 characters, but short names and single words are easier to remember. We recommend no more than 20 characters.</li><li><em>Simple</em>. The subdomain name should be your website\'s name.</li><li><em>Legal</em>. Spaces and special characters are not allowed. Remember also that domain names are NOT case sensitive.</li><li><em>Relevant</em>. For a taxonomic site, enter the highest taxon you will be working on, e.g. "diptera" or "britishdiptera".  For a society site, enter the society\'s acronym, e.g. "bogsoc" or "windsoc".</li></ul><h3>Using your own domain</h3><p>Users are more than welcome to purchase their own domain name for use with a Scratchpad.  All that is required is that the domain name is pointed at our server quartz.nhm.ac.uk which has the IP address 157.140.2.32.  If using your own domain name, the domain purchase should be completed before the Scratchpad application.</p><p>If you would like to use your own domain name, then enter the full domain name (without "http://").</p>',
      '#type' => 'textfield',
      '#required' => isset($user->roles[ADMIN_RID]) ? FALSE : TRUE,
      '#field_suffix' => '.myspecies.info',
      '#hosting_site_field' => 'title',
      '#hosting_site_field_value' => '',
      '#attributes' => array(
        'class' => 'subdomain',
        'placeholder' => 'examplidae'
      )
    )
  );
  $form['comments_fieldset'] = array(
    '#type' => 'fieldset',
    '#title' => t('Miscellaneous'),
    '#weight' => 5,
    '#collapsed' => FALSE,
    '#collapsible' => FALSE,
    'comments' => array(
      '#type' => 'textarea',
      '#resizable' => FALSE,
      '#title' => t('Any other comments')
    )
  );
  // We need to set some values here if the user isn't a trusted one.
  if(!isset($user->roles[ADMIN_RID])){
    // Set the default profile. Note, this will need updating, or a nice way
    // of setting the default profile for anon is required.
    unset($form['site']['profile']);
    $form['about_scratchpad']['profile'] = array(
      '#type' => 'select',
      '#title' => t('Scratchpad type'),
      '#default_value' => SCRATCHPAD_2_PROFILE_NID,
      '#description' => t('Only change this value if you know that you require a specific Scratchpad version'),
      '#options' => array(
        SCRATCHPAD_2_PROFILE_NID => t('Standard Scratchpad 2.0 (http://scratchpads.eu)'),
        EMONOCOT_2_PROFILE_NID => t('emonocot Scratchpad 2.0 (http://e-monocot.org)')
      )
    );
    $form['site']['platform'] = array(
      '#type' => 'hidden',
      '#value' => SCRATCHPAD_2_PLATFORM
    );
    $form['site']['site_language'] = array(
      '#type' => 'hidden',
      '#value' => 'en'
    );
    $form['site']['db_server'] = array(
      '#type' => 'hidden',
      '#value' => '2'
    );
  }
  $form['submit']['#prefix'] = "<p>By submitting this form, you agree to be bound by the <a href=\"#\" onclick=\"$('#tandcs').toggle(); return false;\">terms and conditions</a> of use.<div id=\"tandcs\" style=\"display:none\"><ol>
<li><b>ACCEPTANCE OF TERMS</b> This agreement is between the Virtual Biodiversity Research and Access Network for Taxonomy and its agents (collectively 'ViBRANT'), and you and your agents (collectively 'you') regarding the use of this website (the \"Site\"). By using the Site, you agree to the Terms and Conditions in this document.</li>
<li><b>OWNERSHIP OF SITE</b> The text, graphics, sound and software (collectively \"Content\") on this Site is owned by you and your agents and you bear sole and ultimate responsibility for this Content. ViBRANT supports the computer hardware infrastructure and software content management system that provides access to this Content.</li>
<li><b>ACCESS TO SERVICES AND TERMINATION OF ACCESS</b> You are responsible for all activity logged through your user account and for the activity of other persons or entities you grant access to this Site. You agree to notify ViBRANT immediately if you become aware of any unauthorised use and you agree that ViBRANT may terminate your access privileges and remove Content without notice if ViBRANT believes you have violated any provision of this Agreement. You agree that termination of your access to the Site shall not result in any liability or other obligation of ViBRANT to you or any third party in connection with such termination.  An archive copy of your content at the time of termination will be kept and made available to you on request.</li>
<li><b>CONTENT</b> You agree to be bound by the Joint Academic Network (JANET) Acceptable Use Guidelines (<a href=\"http://www.ja.net/company/policies/aup.html\" target=\"_blank\">http://www.ja.net/company/policies/aup.html</a>). In summary this document states that all Content placed on the Site must be legal, decent and truthful. Through you or your agent's use of the Site, you represent and warrant that you have all the rights necessary to receive, use, transmit and disclose all data that you use in any way with the Site. You agree and acknowledge that you are solely responsible for any liabilities, fines, or penalties occasioned by any such violations or lack of rights and that you are solely responsible for the accuracy and adequacy of information and data furnished on the Site.</li>
<li><b>TAKE DOWN POLICY</b> If you are a rights owner and are concerned that you have found material on a Site and have not given permission for its use, please contact us in writing (scratchpad@nhm.ac.uk) providing:
  <ul>
    <li>Your contact details</li>
    <li>The full bibliographic details of the material</li>
    <li>The Site address where you found the material</li>
    <li>A statement that, under penalty of perjury, you are the rights owner or are authorised to act for the rights owner</li>
  </ul>
</li>
<li><b>DISCLAIMER OF WARRANTIES</b> The use of the Site is solely at your own risk. The site is provided on an \"as is\" and \"as available\" basis and ViBRANT expressly disclaims all warranties of any kind with respect to the site, whether express or implied. ViBRANT makes no warranty that the access to the site and/or Content therein will be uninterrupted or secure. Your sole and exclusive remedy with respect to any defect in or dissatisfaction with the Site is to cease using the Site.</li>
<li><b>LIMITATION OF LIABILITY</b> You understand and agree that ViBRANT shall not be liable for any direct, indirect, incidental, special, consequential, or exemplary damages resulting from any matter related to your or other persons use of the site.</li>
<li><b>DISCLAIMER OF CONTENT</b> You understand and acknowledge that ViBRANT assumes no responsibility to screen or review Content and that ViBRANT shall have the right, but not the obligation, in its sole discretion to review, refuse, monitor, or remove any Content. ViBRANT expressly disclaims all responsibility or liability to you or any other person or entity for the Content and you acknowledge and agree that you assume all risk associated with the use of any and all Content.</li>
</ol></div>";
  unset($form['site']['title']);
  // Set the weight of the button
  $form['submit']['#weight'] = 1000;
  // Add validate
  $form['#validate'] = array_merge((is_array($form['#validate']) ? $form['#validate'] : array()), array(
    'hostmaster_scratchpad_form_validate'
  ));
  // Add submit (needs to be first)
  $form['#submit'] = array_merge(array(
    'hostmaster_scratchpad_form_submit'
  ), (is_array($form['#submit']) ? $form['#submit'] : array()));
  $form['site']['db_server']['#value'] = 5067;
  $form['site']['db_server_description']['#value'] = '<div class="placeholder">msq-scratchpads.nhm.ac.uk</div>';
}

/**
 * Validate function for the above form
 */
function hostmaster_scratchpad_form_validate($form, &$form_state){
  // Check that the title isn't already in use.
  $site_url = strpos($form_state['values']['title'], '.') ? $form_state['values']['title'] : trim($form_state['values']['title']) . '.myspecies.info';
  if(db_result(db_query("SELECT COUNT(*) FROM node n, hosting_site h WHERE h.nid = n.nid AND (h.status = 1 OR h.status = 0) AND type = 'site' AND n.title = '%s'", $site_url))){
    // Site URL already in use.
    form_set_error('title', 'The domain you have chosen is already in use');
  }
  // Only validate if we are trying to create a Scratchpad
  if($form_state['values']['profile'] == SCRATCHPAD_2_PROFILE_NID || $form_state['values']['profile'] == EMONOCOT_2_PROFILE_NID){
    // Next, check the domain name resolves to Quartz
    // If we have dots, then it is not a subdomain of myspecies.info - we need
    // to check it.
    if(strpos($form_state['values']['title'], '.')){
      // We have a new domain, lets check it's pointing at Quartz
      if(gethostbyname($form_state['values']['title']) !== gethostbyname('quartz.nhm.ac.uk')){
        form_set_error('title', 'The domain name you have entered is not pointing at our server:<ul><li>' . $form_state['values']['title'] . ' = ' . gethostbyname($form_state['values']['title']) . '</li><li>quartz.nhm.ac.uk = ' . gethostbyname('quartz.nhm.ac.uk') . '</li></ul>');
      }
    }else{
      $form_state['values']['subdomain'] = trim($form_state['values']['subdomain']) . '.myspecies.info';
    }
    // Also check that the domain name is unique.
    if(db_result(db_query("SELECT COUNT(*) FROM {node} n, {hosting_site} h WHERE n.nid = h.nid AND title = '%s' AND type = 'site' AND h.status != -2", $form_state['values']['subdomain']))){
      form_set_error('subdomain', t('That domain name is already taken'));
    }
  }
}

/**
 * Submit function for the above form
 */
function hostmaster_scratchpad_form_submit($form, &$form_state){
  // Lets simply save the values to the table - easy!
  // If we have don't have dots, then we need to add .myspecies.info
  // form_set_value
  if(!strpos($form_state['values']['title'], '.')){
    form_set_value($form['about_scratchpad']['title'], trim($form_state['values']['title']) . '.myspecies.info', $form_state);
  }
}

/**
 * Implementation of hook_insert
 */
function hostmaster_scratchpad_nodeapi(&$node, $op, $a3 = NULL, $a4 = NULL){
  if($node->type == 'client'){
    switch($op){
      case 'presave':
        // Get the user from the email
        $client_user = user_load(array(
          'mail' => $node->email
        ));
        if($client_user){
          $node->uid = $client_user->uid;
        }
        break;
    }
  }  // Only do this if the profile is a Scratchpad one (1 or 2)
else if($node->type == 'site' && ($node->profile == SCRATCHPAD_2_PROFILE_NID || $node->profile == EMONOCOT_2_PROFILE_NID)){
    switch($op){
      case 'delete':
        db_query('DELETE FROM {hostmaster_scratchpad} WHERE nid = %d', $node->nid);
        break;
      case 'delete revision':
        db_query('DELETE FROM {hostmaster_scratchpad} WHERE vid = %d', $node->nid, $node->vid);
        break;
      case 'insert':
      case 'update':
        db_query('DELETE FROM {hostmaster_scratchpad} WHERE vid = %d', $node->nid, $node->vid);
        db_query("INSERT INTO {hostmaster_scratchpad} (nid, vid, client_title, institution, country, site_title, taxonomic_scope, comments) VALUES (%d, %d, '%s', '%s', '%s', '%s', '%s', '%s')", array(
          $node->nid,
          $node->vid,
          $node->client_title,
          $node->institution,
          $node->country,
          $node->site_title,
          $node->taxonomic_scope,
          $node->comments
        ));
        break;
      case 'load':
        $additional_node = db_fetch_object(db_query('SELECT * FROM {hostmaster_scratchpad} WHERE vid = %d', $node->vid));
        if($additional_node){
          foreach($additional_node as $key => $value){
            $node->$key = $value;
          }
        }
        break;
      case 'view':
        if($node->site_title){
          $node->content['info']['country'] = array(
            '#weight' => 1000,
            '#type' => 'item',
            '#title' => t('Country'),
            '#value' => $node->country
          );
          $node->content['info']['site_title'] = array(
            '#weight' => 1000,
            '#type' => 'item',
            '#title' => t('Site title'),
            '#value' => $node->site_title
          );
          $node->content['info']['institution'] = array(
            '#weight' => 1000,
            '#type' => 'item',
            '#title' => t('Institution'),
            '#value' => $node->institution
          );
          $node->content['info']['taxonomic_scope'] = array(
            '#weight' => 1000,
            '#type' => 'item',
            '#title' => t('Taxonomic scope'),
            '#value' => $node->taxonomic_scope
          );
          if(trim($node->comments)){
            $node->content['info']['comments'] = array(
              '#weight' => 1000,
              '#type' => 'item',
              '#title' => t('Comments'),
              '#value' => $node->commentsss
            );
          }
        }
        break;
    }
  }
}

/**
 * Implementation of drush_hook_pre_hosting_task()
 */
function drush_hostmaster_scratchpad_pre_hosting_task(){
  $task = & drush_get_context('HOSTING_TASK');
  if($task->ref->type == 'site' && ($task->task_type == 'install' || $task->task_type == 'verify')){
    $client = node_load($task->ref->client);
    $task->options['client_title'] = $task->ref->client_title;
    $task->options['fullname'] = $client ? $client->title : 'Scratchpad Maintainer';
    $task->options['institution'] = $task->ref->institution;
    $task->options['site_title'] = $task->ref->site_title;
    $task->options['client_email'] = $client->name;
    $task->options['country'] = $task->ref->country;
    $task->options['taxonomic_scope'] = $task->ref->taxonomic_scope;
  }
}

/**
 * Implementation of hook_theme
 */
function hostmaster_scratchpad_theme(){
  return array(
    'hostmaster_scratchpad_application_form' => array(
      'arguments' => array(
        'form' => NULL
      )
    )
  );
}

/**
 * Theme for the above form
 */
function theme_hostmaster_scratchpad_application_form($form){
  // drupal_set_message(print_r($form, 1));
  if(isset($form['logout_to_see_form'])){return drupal_render_form($form['#id'], $form);}
  drupal_add_css(drupal_get_path('module', 'hostmaster_scratchpad') . '/hostmaster_scratchpad.css');
  $options = array();
  foreach(array(
    'client',
    'about_scratchpad'
  ) as $fieldset){
    foreach($form[$fieldset] as $key => $form_part){
      if(is_array($form_part) && isset($form_part['#description'])){
        $options[$key] = array(
          'cssSelect' => '#edit-' . str_replace("_", "-", $key),
          'text' => $form_part['#description'],
          'trigger' => array(
            'focus'
          ),
          'shadow' => TRUE,
          'width' => 350,
          'positions' => 'top'
        );
      }
    }
  }
  beautytips_add_beautytips($options);
  return drupal_render_form($form['#id'], $form);
}
